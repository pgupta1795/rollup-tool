{"version":3,"file":"static/js/533.583df22e.chunk.js","mappings":"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","sources":["Styles/StyledDiv.js","Styles/StyledInputBase.js","components/Search/options.jsx","components/Search/search.jsx"],"sourcesContent":["import { alpha, styled } from '@mui/material/styles';\r\n\r\nexport const StyledDiv = styled('div')(({ theme }) => ({\r\n  '.bgColor ': {\r\n    background:\r\n      theme.palette.mode === 'dark'\r\n        ? theme.palette.common.black\r\n        : `linear-gradient(to right bottom,${theme.palette.primary.light},${theme.palette.primary.main},${theme.palette.primary.dark} )`,\r\n  },\r\n}));\r\n\r\nexport const SearchDiv = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '90%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nexport const SearchIconDiv = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 0.5),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: 'white',\r\n}));\r\n","import { styled } from '@mui/material/styles';\r\nimport { InputBase } from '@mui/material';\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    focus: true,\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '30ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default StyledInputBase;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Grid, Typography } from '@mui/material';\r\n\r\nconst Options = ({ props, option }) => (\r\n  <li {...props}>\r\n    <Grid container alignItems=\"center\">\r\n      <Grid item>\r\n        <Box sx={{ color: 'text.secondary', mr: 2 }}>{option.revision}</Box>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"subtitle1\"\r\n          color=\"text.secondary\"\r\n          style={{\r\n            fontWeight: 700,\r\n          }}\r\n        >\r\n          {option.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Name : {option.name}-{option.revision}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Owner : {option.owner}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Description : {option.description}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  </li>\r\n);\r\n\r\nOptions.propTypes = {\r\n  props: PropTypes.any.isRequired,\r\n  option: PropTypes.object.isRequired,\r\n};\r\nexport default Options;\r\n","import SearchIcon from '@mui/icons-material/Search';\r\nimport { Autocomplete, CircularProgress } from '@mui/material';\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../authentication/auth';\r\nimport * as Api from '../../helper/Api';\r\nimport Paths from '../../helper/Paths';\r\nimport StorageConstants from '../../helper/StorageConstants';\r\nimport toast from '../../helper/toast';\r\nimport { SearchDiv, SearchIconDiv } from '../../Styles/StyledDiv';\r\nimport StyledInputBase from '../../Styles/StyledInputBase';\r\nimport { authenticateTableData } from '../../utils/CommonUtils';\r\nimport { debounce } from '../../utils/fetchUtils';\r\nimport * as Props from '../GridTable/props';\r\nimport * as TableUtils from '../GridTable/tableUtils';\r\nimport Options from './options';\r\n\r\nconst type = 'VPMReference';\r\n\r\nconst TechniaSearch = () => {\r\n  const headerKeys = Props.DEFAULT_COLUMN_KEYS;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [options, setOptions] = React.useState([\r\n    {\r\n      id: '',\r\n      type: '',\r\n      name: '',\r\n      revision: '',\r\n      title: '',\r\n      current: '',\r\n      description: '',\r\n      owner: '',\r\n    },\r\n  ]);\r\n  const [value, setValue] = React.useState(null);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const navigate = useNavigate();\r\n  const auth = useAuth();\r\n\r\n  const fetch = React.useMemo(\r\n    () =>\r\n      debounce(\r\n        _.throttle(async ({ spaceUrl, input }, callback) => {\r\n          try {\r\n            setLoading(true);\r\n            const response = await Api.searchObjects(\r\n              type,\r\n              spaceUrl,\r\n              30,\r\n              0,\r\n              input\r\n            );\r\n            callback(response);\r\n            setLoading(false);\r\n            return response;\r\n          } catch (error) {\r\n            console.error(error);\r\n            toast.error(error);\r\n            auth.logout();\r\n            navigate(Paths.LOGIN);\r\n          }\r\n          return null;\r\n        }, 800),\r\n        500\r\n      ),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n    if (inputValue === '') {\r\n      setOptions(value ? [value] : []);\r\n      return undefined;\r\n    }\r\n    const spaceUrl = localStorage.getItem(StorageConstants.SPACE3d);\r\n\r\n    fetch({ spaceUrl, input: inputValue }, (response) => {\r\n      if (active && authenticateTableData(response)) {\r\n        const allRows = TableUtils.getRows(response, headerKeys);\r\n        setOptions(allRows);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n      setLoading(false);\r\n    };\r\n  }, [value, inputValue, fetch, headerKeys]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"enovia-api-search\"\r\n      loading={loading}\r\n      options={options}\r\n      value={value}\r\n      includeInputInList\r\n      filterSelectedOptions\r\n      autoComplete\r\n      filterOptions={(x) => x}\r\n      getOptionLabel={(option) =>\r\n        typeof option === 'string' ? option : option.title\r\n      }\r\n      renderTags={() => null}\r\n      noOptionsText=\"No Objects Found\"\r\n      disableCloseOnSelect\r\n      onChange={(event, newValue) => {\r\n        event.preventDefault();\r\n        setValue(null);\r\n        const path = `${Paths.TYPE}/${type}/${newValue.id}`;\r\n        navigate(path);\r\n        setLoading(false);\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n      }}\r\n      renderOption={(props, option) => (\r\n        <Options props={props} option={option} key={option.id} />\r\n      )}\r\n      renderInput={(params) => (\r\n        <SearchDiv component=\"div\">\r\n          <SearchIconDiv>\r\n            <SearchIcon />\r\n          </SearchIconDiv>\r\n          <StyledInputBase\r\n            ref={params.InputProps.ref}\r\n            placeholder=\"Search…\"\r\n            inputProps={params.inputProps}\r\n            endAdornment={\r\n              loading ? (\r\n                <CircularProgress color=\"inherit\" style={{ padding: '10px' }} />\r\n              ) : null\r\n            }\r\n          />\r\n        </SearchDiv>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TechniaSearch;\r\n"],"names":["StyledDiv","styled","theme","background","palette","mode","common","black","primary","light","main","dark","SearchDiv","position","borderRadius","shape","backgroundColor","alpha","white","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconDiv","padding","height","pointerEvents","display","alignItems","justifyContent","color","InputBase","focus","paddingLeft","transition","transitions","create","props","option","Grid","container","item","Box","sx","mr","revision","xs","Typography","component","variant","style","fontWeight","title","name","owner","description","type","headerKeys","Props","React","loading","setLoading","id","current","options","setOptions","value","setValue","inputValue","setInputValue","navigate","useNavigate","auth","useAuth","fetch","debounce","_","callback","spaceUrl","input","Api","response","console","error","toast","logout","Paths","active","localStorage","getItem","StorageConstants","authenticateTableData","allRows","TableUtils","Autocomplete","includeInputInList","filterSelectedOptions","autoComplete","filterOptions","x","getOptionLabel","renderTags","noOptionsText","disableCloseOnSelect","onChange","event","newValue","preventDefault","path","onInputChange","newInputValue","renderOption","renderInput","params","Search","ref","InputProps","placeholder","inputProps","endAdornment","CircularProgress"],"sourceRoot":""}