{"version":3,"file":"static/js/832.a11b4f83.chunk.js","mappings":"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","sources":["components/Form/Fields/MassField.jsx","components/Form/Fields/actualMassField.jsx","components/Form/Fields/CalculatedMassField.jsx","components/Form/Fields/EstimatedMassField.jsx","components/Form/Details.jsx","hooks/useChartSeriesAndLabels.js","components/Graphs/chartAttributes.jsx","components/Graphs/chartStates.jsx","components/Graphs/chartMassDistribution.jsx","components/Graphs/chartAttributesBar.jsx","components/Graphs/objectGraphs.jsx","components/Card/customTab.jsx","components/Common/RadioField.jsx","components/GridTable/rollupUtils.js","components/GridTable/toolbar/CalculationMenu.jsx","hooks/useRollup.js","Styles/StyledMenu.js","components/GridTable/toolbar/CalculateAll.jsx","components/GridTable/toolbar/rollupMenu.jsx","components/TableContainer/ObjectsTableContainer.jsx"],"sourcesContent":["import { ArrowDropDown, ArrowDropUp } from '@mui/icons-material';\r\nimport { Stack, Typography } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { roundOff } from '../../../utils/CommonUtils';\r\nimport { getAttributeTolerance } from '../../../utils/ServiceUtils';\r\n\r\nconst MassField = ({ attribute, children, value }) => {\r\n  const tolerance = getAttributeTolerance(attribute);\r\n  const upperLimitValue =\r\n    Number(value) + Number((value * tolerance.Upper) / 100);\r\n  const lowerLimitValue =\r\n    Number(value) + Number((value * tolerance.Lower) / 100);\r\n\r\n  return (\r\n    <Stack direction=\"column\">\r\n      <div className=\"flex-column-box\">\r\n        <div className=\"flex-column-box\">\r\n          <ArrowDropUp color=\"success\" />\r\n          <Typography\r\n            component=\"span\"\r\n            color=\"text.secondary\"\r\n            variant=\"caption\"\r\n            sx={{ ml: 0.5 }}\r\n          >\r\n            <strong>{`Upper (${tolerance.Upper}%)`}</strong>\r\n          </Typography>\r\n        </div>\r\n        <Typography component=\"span\" color=\"green\" variant=\"caption\">\r\n          <strong>{roundOff(Number(upperLimitValue))}</strong>\r\n        </Typography>\r\n      </div>\r\n      {children}\r\n      <div className=\"flex-column-box\">\r\n        <div className=\"flex-column-box\">\r\n          <ArrowDropDown color=\"error\" />\r\n          <Typography component=\"span\" color=\"text.secondary\" variant=\"caption\">\r\n            <strong>{`Lower (${tolerance.Lower}%)`}</strong>\r\n          </Typography>\r\n        </div>\r\n        <Typography\r\n          component=\"span\"\r\n          color=\"red\"\r\n          variant=\"caption\"\r\n          sx={{ ml: 0.5 }}\r\n        >\r\n          <strong>{roundOff(Number(lowerLimitValue))}</strong>\r\n        </Typography>\r\n      </div>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nMassField.defaultProps = {\r\n  value: 0,\r\n};\r\n\r\nMassField.propTypes = {\r\n  attribute: PropTypes.string.isRequired,\r\n  children: PropTypes.any.isRequired,\r\n  value: PropTypes.any,\r\n};\r\nexport default MassField;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { roundOff } from '../../../utils/CommonUtils';\r\nimport ChipField from '../../Common/ChipField';\r\nimport MassField from './MassField';\r\n\r\nconst ActualMassField = ({ objectDBData }) => (\r\n  <MassField\r\n    attribute=\"Actual_Weight\"\r\n    value={objectDBData?.sumActualMass?.$numberDecimal}\r\n  >\r\n    <ChipField\r\n      label=\"Sum Actual Mass\"\r\n      variant=\"subtitle1\"\r\n      value={\r\n        roundOff(Number(objectDBData?.sumActualMass?.$numberDecimal)) || ''\r\n      }\r\n    />\r\n  </MassField>\r\n);\r\n\r\nActualMassField.defaultProps = {\r\n  objectDBData: null,\r\n};\r\n\r\nActualMassField.propTypes = {\r\n  objectDBData: PropTypes.object,\r\n};\r\nexport default ActualMassField;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { roundOff } from '../../../utils/CommonUtils';\r\nimport ChipField from '../../Common/ChipField';\r\nimport MassField from './MassField';\r\n\r\nconst CalculatedMassField = ({ objectDBData }) => (\r\n  <MassField\r\n    attribute=\"Weight\"\r\n    value={objectDBData?.sumCalculatedMass?.$numberDecimal}\r\n  >\r\n    <ChipField\r\n      label=\"Sum Calculated Mass\"\r\n      variant=\"subtitle1\"\r\n      value={\r\n        roundOff(Number(objectDBData?.sumCalculatedMass?.$numberDecimal)) || ''\r\n      }\r\n    />\r\n  </MassField>\r\n);\r\n\r\nCalculatedMassField.defaultProps = {\r\n  objectDBData: null,\r\n};\r\n\r\nCalculatedMassField.propTypes = {\r\n  objectDBData: PropTypes.object,\r\n};\r\nexport default CalculatedMassField;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { roundOff } from '../../../utils/CommonUtils';\r\nimport ChipField from '../../Common/ChipField';\r\nimport MassField from './MassField';\r\n\r\nconst EstimatedMassField = ({ objectDBData }) => (\r\n  <MassField\r\n    attribute=\"Estimated_Weight\"\r\n    value={objectDBData?.sumEstimatedMass?.$numberDecimal}\r\n  >\r\n    <ChipField\r\n      label=\"Sum Estimated Mass\"\r\n      variant=\"subtitle1\"\r\n      value={\r\n        roundOff(Number(objectDBData?.sumEstimatedMass?.$numberDecimal)) || ''\r\n      }\r\n    />\r\n  </MassField>\r\n);\r\n\r\nEstimatedMassField.defaultProps = {\r\n  objectDBData: null,\r\n};\r\n\r\nEstimatedMassField.propTypes = {\r\n  objectDBData: PropTypes.object,\r\n};\r\nexport default EstimatedMassField;\r\n","import { Divider, Skeleton, Stack, Typography } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport Constants from '../../helper/Constants';\r\nimport { getTypeObjectById } from '../../helper/TypeObjectApi';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport { roundOff } from '../../utils/CommonUtils';\r\nimport ExpandablePanel from '../Card/expandablePanel';\r\nimport ChipField from '../Common/ChipField';\r\nimport ActualMassField from './Fields/actualMassField';\r\nimport CalculatedMassField from './Fields/CalculatedMassField';\r\nimport EstimatedMassField from './Fields/EstimatedMassField';\r\n\r\nconst Details = () => {\r\n  const object = useContext(ObjectContext);\r\n  const [objectDBData, setObjectDBData] = useState();\r\n\r\n  const header = (\r\n    <Box sx={{ mb: 1, mx: 2 }}>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item xs>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {object.state?.data[0]?.title || ''}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body2\" component=\"div\">\r\n            {object.state?.data[0]?.revision || ''}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <div>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h6\"\r\n              title={Constants.BEST_AVAILABLE}\r\n            >\r\n              Best Available Mass :{' '}\r\n              <Typography\r\n                component=\"span\"\r\n                gutterBottom\r\n                variant=\"h5\"\r\n                color=\"primary\"\r\n              >\r\n                <strong>\r\n                  {roundOff(\r\n                    Number(objectDBData?.bestAvailable?.$numberDecimal)\r\n                  ) || ''}\r\n                </strong>\r\n              </Typography>\r\n            </Typography>\r\n          </div>\r\n          <div className=\"no-display\">\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h5\"\r\n              color=\"primary\"\r\n              title={Constants.BEST_AVAILABLE_V2}\r\n            >\r\n              Best Available Mass V2 :{' '}\r\n              {objectDBData?.bestAvailableV2?.$numberDecimal || ''}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const id = object.state.data[0] && object.state.data[0].id;\r\n    if (!id) return;\r\n    const response = await getTypeObjectById(id);\r\n    if (!response) return;\r\n    setObjectDBData(response);\r\n  }, [object]);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <ExpandablePanel summary={<Typography color=\"primary\">Details</Typography>}>\r\n      {object?.loading ? (\r\n        <>\r\n          <Skeleton height=\"10vh\" />\r\n          <Divider variant=\"middle\" />\r\n          <Skeleton height=\"10vh\" />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {header}\r\n          <Divider variant=\"middle\" />\r\n          <Grid container sx={{ gridTemplateColumns: 'auto 10fr auto' }}>\r\n            <Box sx={{ mt: 1, mx: 2 }}>\r\n              <Typography gutterBottom variant=\"subtitle1\">\r\n                {object.state?.data[0]?.name || ''}\r\n              </Typography>\r\n              <Typography gutterBottom variant=\"body2\" color=\"text.secondary\">\r\n                {object.state?.data[0]?.type || ''}\r\n              </Typography>\r\n              <Stack direction=\"row\" spacing={1} sx={{ mt: 1 }}>\r\n                <ChipField\r\n                  label=\"Description\"\r\n                  value={object.state?.data[0]?.description || ''}\r\n                />\r\n                <ChipField\r\n                  label=\"Owner\"\r\n                  value={object.state?.data[0]?.owner || ''}\r\n                />\r\n              </Stack>\r\n            </Box>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            <Stack\r\n              direction=\"row\"\r\n              spacing={1}\r\n              sx={{\r\n                mt: 1,\r\n                mx: 2,\r\n                display: 'flex',\r\n                alignItems: 'flex-end',\r\n                justifyContent: 'flex-end',\r\n              }}\r\n            >\r\n              <ActualMassField objectDBData={objectDBData} />\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <EstimatedMassField objectDBData={objectDBData} />\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <CalculatedMassField objectDBData={objectDBData} />\r\n            </Stack>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </ExpandablePanel>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import { useEffect, useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nexport default (objects, options, fn) => {\r\n  const theme = useTheme();\r\n  const [state, setState] = useState({\r\n    ...options,\r\n    theme: {\r\n      mode: theme.palette.mode,\r\n      palette: 'palette7',\r\n    },\r\n  });\r\n  const executeFunction = fn.bind(this);\r\n\r\n  useEffect(() => {\r\n    const [series, labels] = executeFunction(\r\n      objects?.state.data,\r\n      'VPMReference'\r\n    );\r\n    setState({\r\n      ...state,\r\n      series,\r\n      options: {\r\n        theme: {\r\n          mode: theme.palette.mode,\r\n          palette: 'palette7',\r\n        },\r\n        labels,\r\n      },\r\n    });\r\n  }, [objects, theme]);\r\n\r\n  return state;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport useChartSeriesAndLabels from '../../hooks/useChartSeriesAndLabels';\r\nimport { getAttributeSeries } from '../../utils/ChartUtils';\r\n\r\nconst AttributesChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        id: 'attributesChart',\r\n        type: 'line',\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        style: 'hollow',\r\n      },\r\n      stroke: {\r\n        width: 1,\r\n      },\r\n      tooltip: {\r\n        shared: true,\r\n        intersect: false,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n        labels: {\r\n          show: false,\r\n        },\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        text: 'Attributes',\r\n      },\r\n    },\r\n  };\r\n  const object = useContext(ObjectContext);\r\n  const state = useChartSeriesAndLabels(object, options, getAttributeSeries);\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"line\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttributesChart;\r\n","import React, { useContext } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport useChartSeriesAndLabels from '../../hooks/useChartSeriesAndLabels';\r\nimport { getStateSeriesAndLabels } from '../../utils/ChartUtils';\r\n\r\nconst StatesChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      labels: [],\r\n      chart: {\r\n        id: 'statesChart',\r\n      },\r\n      title: {\r\n        text: 'STATES',\r\n      },\r\n    },\r\n  };\r\n  const object = useContext(ObjectContext);\r\n  const state = useChartSeriesAndLabels(\r\n    object,\r\n    options,\r\n    getStateSeriesAndLabels\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"pie\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatesChart;\r\n","import React, { useContext } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport useChartSeriesAndLabels from '../../hooks/useChartSeriesAndLabels';\r\nimport { getMassSeriesAndLabels } from '../../utils/ChartUtils';\r\n\r\nconst MassDistributionChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      labels: [],\r\n      chart: {\r\n        id: 'massDistributionChart',\r\n      },\r\n      title: {\r\n        text: 'Mass Distribution',\r\n      },\r\n    },\r\n  };\r\n  const object = useContext(ObjectContext);\r\n  const state = useChartSeriesAndLabels(\r\n    object,\r\n    options,\r\n    getMassSeriesAndLabels\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"pie\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MassDistributionChart;\r\n","import React, { useContext } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport useChartSeriesAndLabels from '../../hooks/useChartSeriesAndLabels';\r\nimport { getAttributesBarSeries } from '../../utils/ChartUtils';\r\n\r\nconst AttributesBarChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        id: 'rootObjectAttributesChart',\r\n      },\r\n      title: {\r\n        text: 'Attributes Distribution',\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          distributed: true,\r\n        },\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n  const object = useContext(ObjectContext);\r\n  const state = useChartSeriesAndLabels(\r\n    object,\r\n    options,\r\n    getAttributesBarSeries\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"bar\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttributesBarChart;\r\n","import { Grid, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport AttributesChart from './chartAttributes';\r\nimport StatesChart from './chartStates';\r\nimport MassDistributionChart from './chartMassDistribution';\r\nimport AttributesBarChart from './chartAttributesBar';\r\nimport GraphContainer from './graphContainer';\r\n\r\nconst ObjectGraphs = () => {\r\n  const theme = useTheme();\r\n  const { primary } = theme.palette;\r\n\r\n  return (\r\n    <GraphContainer colors={[primary.main, primary.light]} height=\"90vh\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={3}>\r\n          <StatesChart />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <MassDistributionChart />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <AttributesBarChart />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AttributesChart />\r\n        </Grid>\r\n      </Grid>\r\n    </GraphContainer>\r\n  );\r\n};\r\n\r\nexport default ObjectGraphs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tab } from '@mui/material';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\n\r\nconst CustomTab = ({ defaultTab, tabsArray }) => {\r\n  const [value, setValue] = React.useState(defaultTab);\r\n\r\n  const tabs = tabsArray.map(({ label, icon }) => (\r\n    <Tab\r\n      value={label}\r\n      label={label}\r\n      key={label}\r\n      icon={icon}\r\n      iconPosition=\"start\"\r\n    />\r\n  ));\r\n\r\n  const tabElements = tabsArray.map(({ label, element }) => (\r\n    <TabPanel value={label} className=\"full-width-height\" key={label}>\r\n      {element}\r\n    </TabPanel>\r\n  ));\r\n\r\n  return (\r\n    <TabContext value={value}>\r\n      <TabList\r\n        value={value}\r\n        onChange={(e, newValue) => setValue(newValue)}\r\n        aria-label=\"secondary tabs example\"\r\n        sx={{ paddingLeft: '24px', paddingRight: '24px' }}\r\n      >\r\n        {tabs}\r\n      </TabList>\r\n      {tabElements}\r\n    </TabContext>\r\n  );\r\n};\r\n\r\nCustomTab.propTypes = {\r\n  defaultTab: PropTypes.string.isRequired,\r\n  tabsArray: PropTypes.array.isRequired,\r\n};\r\nexport default CustomTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormControlLabel, Radio, Typography } from '@mui/material';\r\n\r\nconst RadioField = ({ value, label, title, ...rest }) => (\r\n  <FormControlLabel\r\n    value={value}\r\n    control={<Radio />}\r\n    title={title}\r\n    label={<Typography variant=\"subtitle2\">{label}</Typography>}\r\n    {...rest}\r\n  />\r\n);\r\n\r\nRadioField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default RadioField;\r\n","/* eslint-disable no-nested-ternary */\r\nimport _ from 'lodash';\r\nimport { authenticateTableData } from '../../utils/CommonUtils';\r\nimport * as Api from '../../helper/Api';\r\nimport { updateTypeObjectById } from '../../helper/TypeObjectApi';\r\nimport * as ServiceUtils from '../../utils/ServiceUtils';\r\nimport toast from '../../helper/toast';\r\nimport {\r\n  subItemsField,\r\n  findRowById,\r\n  updateCellValue,\r\n  createAction,\r\n  hasChildren,\r\n} from './tableUtils';\r\n\r\nexport const BEST_AVAILABLE = 'Best Available';\r\n\r\nexport const BEST_AVAILABLE_V2 = 'Best Available v2';\r\n\r\nexport const ACTUAL_MASS = 'Actual_Weight';\r\n\r\nexport const ESTIMATED_MASS = 'Estimated_Weight';\r\n\r\nexport const CALCULATED_MASS = 'Weight';\r\n\r\nexport const getRollupOrder = () => {\r\n  const typeSettings = ServiceUtils.getTypeSettings('VPMReference');\r\n  return typeSettings.ROLLUP_ORDER.split('>');\r\n};\r\n\r\n/**\r\n * updates the newValue to itself and summating it till parent level\r\n * @param {*} id\r\n * @param {*} newRows\r\n * @param {*} field\r\n * @returns\r\n */\r\nexport const rollUpFromChildren = (id, newRows, field) => {\r\n  try {\r\n    const row = id ? findRowById(newRows, id) : '';\r\n    if (row) {\r\n      let newValueParent = 0;\r\n      if (row[subItemsField]) {\r\n        row[subItemsField].forEach((children) => {\r\n          const childval = Number(children[field]);\r\n          newValueParent += Number.isNaN(childval) ? 0 : childval;\r\n        });\r\n        newRows = updateCellValue(newRows, id, field, newValueParent);\r\n      }\r\n      newRows = rollUpFromChildren(row?.parent, newRows, field);\r\n    }\r\n    return newRows;\r\n  } catch (error) {\r\n    console.error(error);\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param {parentrow} row\r\n * @param {field name to use for sum children data} field\r\n * @returns\r\n */\r\nconst sumChildRows = (row, field) => {\r\n  if (row?.endItem) return row[field];\r\n  let newValueParent = 0;\r\n\r\n  row[subItemsField].forEach((children) => {\r\n    const childval = hasChildren(children)\r\n      ? sumChildRows(children, field)\r\n      : children.endItem\r\n      ? children[field]\r\n      : 0;\r\n\r\n    newValueParent += Number.isNaN(childval) ? 0 : childval;\r\n  });\r\n  return newValueParent;\r\n};\r\n\r\n/**\r\n * updates the newValue by summing up values from parent\r\n * @param {parentId} id\r\n * @param {data rows} newRows\r\n * @param {field to rollup} field\r\n * @returns\r\n */\r\nexport const rollUpFromParent = (id, newRows, field) => {\r\n  try {\r\n    const row = id ? findRowById(newRows, id) : '';\r\n    if (\r\n      !row ||\r\n      _.isUndefined(row[subItemsField]) ||\r\n      (row[subItemsField] && row[subItemsField].length === 0)\r\n    ) {\r\n      return newRows;\r\n    }\r\n    const rollUpValue = sumChildRows(row, field);\r\n    return updateCellValue(newRows, id, field, rollUpValue);\r\n  } catch (error) {\r\n    console.error(error);\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Shows the probable rollup values on table views,without commiting it to database\r\n * @param {event} event\r\n * @param {state} state\r\n * @returns\r\n */\r\nexport const rollup = (field, newRows) => {\r\n  const customKeys = ServiceUtils.getCustomAttributeNames();\r\n  if (customKeys?.includes(field)) {\r\n    const { id } = newRows[0];\r\n    newRows = rollUpFromParent(id, newRows, field);\r\n  }\r\n  return newRows;\r\n};\r\n\r\n/**\r\n * 1.) Creates object in mongodb database if not already present\r\n * 2.) Updates attribute values in enovia using webservice\r\n * 3.) Creates action if above things are success\r\n * 4.) Updates cestamp with a new value for the object after updation in enovia\r\n *\r\n * @param {type} type\r\n * @param {selectedRow} selectedRow\r\n * @param {newRows} newRows\r\n * @param {oldRows} oldRows\r\n * @returns\r\n */\r\nexport const actualEnoviaRollup = async (\r\n  type,\r\n  currentRow,\r\n  newRows,\r\n  oldRows\r\n) => {\r\n  try {\r\n    await Api.createTypeObject(type, currentRow);\r\n    const response = await Api.updateObject(type, currentRow);\r\n    if (!authenticateTableData(response)) {\r\n      return newRows;\r\n    }\r\n    await createAction(currentRow, oldRows);\r\n    const id = response?.member[0].id;\r\n    const newCEStamp = response?.member[0].cestamp;\r\n    if (id && newCEStamp) {\r\n      newRows = updateCellValue(newRows, id, 'cestamp', newCEStamp);\r\n    }\r\n    if (!hasChildren(currentRow)) {\r\n      return newRows;\r\n    }\r\n    await Promise.all(\r\n      currentRow[subItemsField].map(async (children) => {\r\n        newRows = await actualEnoviaRollup(type, children, newRows, oldRows);\r\n      })\r\n    );\r\n    return newRows;\r\n  } catch (error) {\r\n    console.error(error);\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst getRollupField = (row, rollupOrder) => {\r\n  let field;\r\n  for (const cField of rollupOrder) {\r\n    const fieldValue = row[cField];\r\n    if (fieldValue !== 0) {\r\n      field = cField;\r\n      break;\r\n    }\r\n  }\r\n  return field;\r\n};\r\n\r\n/**\r\n * takes Actual_mass first and if non zero returns that field,\r\n * otherwise goes to next and continues\r\n * @param {row} row\r\n * @param {Fields in which rollup should be done} rollupOrder\r\n * @returns\r\n */\r\nconst sumMultiFieldChildRows = (row, rollupOrder) => {\r\n  let pField = getRollupField(row, rollupOrder);\r\n  pField = pField || rollupOrder[0];\r\n  let newValueParent = row.endItem ? row[pField] : 0;\r\n\r\n  row[subItemsField].forEach((children) => {\r\n    let field = getRollupField(children, rollupOrder);\r\n    field = field || rollupOrder[0];\r\n    const childval = hasChildren(children)\r\n      ? sumMultiFieldChildRows(children, rollupOrder)\r\n      : children.endItem\r\n      ? children[field]\r\n      : 0;\r\n\r\n    newValueParent += Number.isNaN(childval) ? 0 : childval;\r\n  });\r\n  return newValueParent;\r\n};\r\n\r\nconst sumMultiFieldChildRowsV2 = (row, rollupOrder) => {\r\n  let newValueParent = 0;\r\n  row[subItemsField].forEach((children) => {\r\n    let field = getRollupField(children, rollupOrder);\r\n    field = field || rollupOrder[0];\r\n    let currentVal = children[field];\r\n    if (hasChildren(children)) {\r\n      const grandChildSum = sumMultiFieldChildRowsV2(children, rollupOrder);\r\n      currentVal = currentVal > grandChildSum ? currentVal : grandChildSum;\r\n    }\r\n    newValueParent += Number.isNaN(currentVal) ? 0 : currentVal;\r\n  });\r\n  return newValueParent;\r\n};\r\n\r\n/**\r\n * updates the newValue by summing up values from parent\r\n * OR\r\n * updates the rollup value by taking parent's values ,\r\n * if parent's values > child's value is less\r\n * else child's value\r\n * @param {parentId} id\r\n * @param {data rows} newRows\r\n * @param {field to rollup} field\r\n * @returns\r\n */\r\nexport const rollupBestAvailable = (id, newRows, rollupOrder, isV2) => {\r\n  try {\r\n    const row = id ? findRowById(newRows, id) : '';\r\n\r\n    let field = getRollupField(row, rollupOrder);\r\n    field = field || rollupOrder[0];\r\n    let rollUpValue = row.endItem ? row[field] : 0;\r\n\r\n    if (row && hasChildren(row)) {\r\n      rollUpValue = isV2\r\n        ? sumMultiFieldChildRowsV2(row, rollupOrder)\r\n        : sumMultiFieldChildRows(row, rollupOrder);\r\n    }\r\n    return rollUpValue;\r\n  } catch (error) {\r\n    console.error(error);\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getRollupBestAvailable = (newRows) => {\r\n  const rollupOrder = getRollupOrder();\r\n  const { id } = newRows[0];\r\n  const rollupVal = rollupBestAvailable(id, newRows, rollupOrder, false);\r\n  return rollupVal;\r\n};\r\n\r\nexport const getRollupBestAvailableV2 = (newRows) => {\r\n  const rollupOrder = getRollupOrder();\r\n  const rootRow = newRows[0];\r\n  const { id } = rootRow;\r\n  let field = getRollupField(rootRow, rollupOrder);\r\n  field = field || rollupOrder[0];\r\n\r\n  const childRollUpValue = rollupBestAvailable(id, newRows, rollupOrder, true);\r\n  const parentRollUpValue = rootRow[field];\r\n\r\n  const rollUpValue =\r\n    parentRollUpValue > childRollUpValue ? parentRollUpValue : childRollUpValue;\r\n\r\n  return rollUpValue;\r\n};\r\n\r\nexport const calculate = async (rows, attribute) => {\r\n  const currentRows = rows;\r\n  const rootRow = rows[0];\r\n  let param;\r\n  let paramValue = rootRow[attribute];\r\n  switch (attribute) {\r\n    case ACTUAL_MASS:\r\n      param = 'sumActualMass';\r\n      break;\r\n    case CALCULATED_MASS:\r\n      param = 'sumCalculatedMass';\r\n      break;\r\n    case ESTIMATED_MASS:\r\n      param = 'sumEstimatedMass';\r\n      break;\r\n    case BEST_AVAILABLE:\r\n      param = 'bestAvailable';\r\n      paramValue = getRollupBestAvailable(currentRows);\r\n      break;\r\n    case BEST_AVAILABLE_V2:\r\n      param = 'bestAvailableV2';\r\n      paramValue = getRollupBestAvailableV2(currentRows);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  await updateTypeObjectById(rootRow.id, param, paramValue);\r\n  toast.info(`UPDATED ${param} with value ${paramValue}`);\r\n};\r\n","import * as React from 'react';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from '@mui/material/Button';\r\nimport {\r\n  ClickAwayListener,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Switch,\r\n  Typography,\r\n} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport Constants from '../../../helper/Constants';\r\nimport RadioField from '../../Common/RadioField';\r\nimport * as ServiceUtils from '../../../utils/ServiceUtils';\r\nimport * as RollupUtils from '../rollupUtils';\r\nimport useRollup from '../../../hooks/useRollup';\r\n\r\nconst CalculationMenu = ({ func }) => {\r\n  const [value, error, handleRadioChange, handleSubmit, handleClickAway] =\r\n    useRollup(func);\r\n\r\n  const massRadioFields = ServiceUtils.getMassAttributeKeys().map(\r\n    (customAttribute) => {\r\n      const displayTitle = customAttribute.Label;\r\n      const attrName = customAttribute.Attribute;\r\n      if (!displayTitle.includes('Mass')) {\r\n        return null;\r\n      }\r\n      return (\r\n        <RadioField\r\n          value={attrName}\r\n          label={displayTitle}\r\n          title={`Rollup ${displayTitle}`}\r\n          key={displayTitle}\r\n        />\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl sx={{ m: 0.5 }} error={error} variant=\"standard\">\r\n          <FormControlLabel\r\n            control={<Switch defaultChecked />}\r\n            className=\"no-display\"\r\n            label={<Typography variant=\"subtitle2\">Add +5% or -5%</Typography>}\r\n          />\r\n          <RadioGroup\r\n            aria-labelledby=\"demo-error-radios\"\r\n            name=\"rollupCalculation\"\r\n            value={value}\r\n            onChange={handleRadioChange}\r\n          >\r\n            {massRadioFields}\r\n            <RadioField\r\n              value={RollupUtils.BEST_AVAILABLE}\r\n              label={RollupUtils.BEST_AVAILABLE}\r\n              title={Constants.BEST_AVAILABLE}\r\n            />\r\n            <RadioField\r\n              value={RollupUtils.BEST_AVAILABLE_V2}\r\n              label={RollupUtils.BEST_AVAILABLE_V2}\r\n              title={Constants.BEST_AVAILABLE_V2}\r\n              className=\"no-display\"\r\n            />\r\n          </RadioGroup>\r\n          {error ? (\r\n            <FormHelperText>Please select an option</FormHelperText>\r\n          ) : null}\r\n          <Button\r\n            sx={{ mt: 1, mr: 1 }}\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          >\r\n            Calculate\r\n          </Button>\r\n        </FormControl>\r\n      </form>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nCalculationMenu.propTypes = {\r\n  func: PropTypes.func.isRequired,\r\n};\r\nexport default CalculationMenu;\r\n","import { useContext, useState } from 'react';\r\nimport { ObjectContext } from './contexts';\r\nimport * as RollupUtils from '../components/GridTable/rollupUtils';\r\nimport toast from '../helper/toast';\r\n\r\nexport default (func) => {\r\n  const object = useContext(ObjectContext);\r\n  const { state, setState, oldRows } = object;\r\n  const [value, setValue] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [rollupStatus, setRollupStatus] = useState(false);\r\n\r\n  const handleClickAway = () => {\r\n    if (!rollupStatus) {\r\n      setState({ ...state, data: oldRows, rollup: [] });\r\n      return;\r\n    }\r\n    setState({ ...state, rollup: [] });\r\n  };\r\n\r\n  const handleRadioChange = (event) => {\r\n    const field = event.target.value;\r\n    setValue(field);\r\n\r\n    if (field === RollupUtils.BEST_AVAILABLE) {\r\n      const { title } = event.target.labels[0];\r\n      toast.info(title, { position: 'bottom-right' });\r\n      setState({\r\n        ...state,\r\n        rollup: [...RollupUtils.getRollupOrder()],\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (field === RollupUtils.BEST_AVAILABLE_V2) {\r\n      const { title } = event.target.labels[0];\r\n      toast.info(title, { position: 'bottom-right' });\r\n      setState({\r\n        ...state,\r\n        rollup: [...RollupUtils.getRollupOrder()],\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newRows = RollupUtils.rollup(field, oldRows);\r\n    setRollupStatus(false);\r\n    setState({\r\n      ...state,\r\n      data: newRows,\r\n      rollup: [field],\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      if (!value) {\r\n        setError(true);\r\n        return;\r\n      }\r\n      func();\r\n      const { data: newRows } = state;\r\n      RollupUtils.calculate(newRows, value);\r\n      setRollupStatus(true);\r\n      // TODO do not update values in enovia for now\r\n      // const updateInEnovia = false;\r\n      // if (updateInEnovia) {\r\n      //   newRows = await RollupUtils.actualEnoviaRollup(\r\n      //     rootRow.type,\r\n      //     rootRow,\r\n      //     newRows,\r\n      //     oldRows\r\n      //   );\r\n      //   setState({ ...state, data: newRows, rollup: [] });\r\n      //   setOldRows(newRows);\r\n      // }\r\n      setState({ ...state, data: oldRows, rollup: [] });\r\n    } catch (err) {\r\n      setRollupStatus(false);\r\n      setState({ ...state, data: oldRows, rollup: [] });\r\n    }\r\n  };\r\n\r\n  return [value, error, handleRadioChange, handleSubmit, handleClickAway];\r\n};\r\n","import React from 'react';\r\nimport { Menu } from '@mui/material';\r\nimport { styled, alpha } from '@mui/material/styles';\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color:\r\n      theme.palette.mode === 'light'\r\n        ? 'rgb(55, 65, 81)'\r\n        : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default StyledMenu;\r\n","import React, { useContext, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport FunctionsIcon from '@mui/icons-material/Functions';\r\nimport { ObjectContext } from '../../../hooks/contexts';\r\nimport {\r\n  rollup,\r\n  calculate,\r\n  BEST_AVAILABLE,\r\n  ACTUAL_MASS,\r\n  ESTIMATED_MASS,\r\n  CALCULATED_MASS,\r\n} from '../rollupUtils';\r\n\r\nconst CalculateAll = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { state, setState, oldRows } = useContext(ObjectContext);\r\n\r\n  const handleCalculate = () => {\r\n    setLoading(true);\r\n    const { data: rows } = state;\r\n\r\n    let newRows = rollup(ACTUAL_MASS, rows);\r\n    calculate(newRows, ACTUAL_MASS);\r\n\r\n    newRows = rollup(ESTIMATED_MASS, newRows);\r\n    calculate(newRows, ESTIMATED_MASS);\r\n\r\n    newRows = rollup(CALCULATED_MASS, newRows);\r\n    calculate(newRows, CALCULATED_MASS);\r\n\r\n    calculate(rows, BEST_AVAILABLE);\r\n    setState({ ...state, data: oldRows, rollup: [] });\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      startIcon={<FunctionsIcon />}\r\n      onClick={() => handleCalculate()}\r\n    >\r\n      {loading ? 'Loading ...' : 'Calculate All'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CalculateAll;\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport CalculationMenu from './CalculationMenu';\r\nimport StyledMenu from '../../../Styles/StyledMenu';\r\nimport CalculateAll from './CalculateAll';\r\n\r\nconst RollupMenu = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex-column-box\">\r\n        <Button\r\n          id=\"demo-customized-button\"\r\n          aria-controls={open ? 'demo-customized-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? 'true' : undefined}\r\n          variant=\"outlined\"\r\n          disableElevation\r\n          onClick={handleClick}\r\n          endIcon={<KeyboardArrowDownIcon />}\r\n          size=\"small\"\r\n        >\r\n          Rollup\r\n        </Button>\r\n        <CalculateAll />\r\n      </div>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem disableRipple>\r\n          <CalculationMenu func={handleClose} />\r\n        </MenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RollupMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { TableContainer } from '@mui/material';\r\nimport { Dashboard, Info } from '@mui/icons-material';\r\nimport { useAuth } from '../../authentication/auth';\r\nimport * as Api from '../../helper/Api';\r\nimport Paths from '../../helper/Paths';\r\nimport * as ServiceUtils from '../../utils/ServiceUtils';\r\nimport StorageConstants from '../../helper/StorageConstants';\r\nimport ExpandablePanel from '../Card/expandablePanel';\r\nimport Details from '../Form/Details';\r\nimport ObjectTable from '../GridTable/ObjectTable';\r\nimport * as Props from '../GridTable/props';\r\nimport * as TableUtils from '../GridTable/tableUtils';\r\nimport { authenticateTableData } from '../../utils/CommonUtils';\r\nimport useTable from '../../hooks/useTable';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport ObjectGraphs from '../Graphs/objectGraphs';\r\nimport CustomTab from '../Card/customTab';\r\nimport toast from '../../helper/toast';\r\nimport RollupMenu from '../GridTable/toolbar/rollupMenu';\r\n\r\nconst ObjectsTableContainer = ({ type, id }) => {\r\n  const auth = useAuth();\r\n  const [toolbar, state, oldRows, reRender, loading, setters] = useTable();\r\n  const [setLoading, setState, setProps, setOldRows] = setters;\r\n\r\n  const formattedData = React.useCallback(\r\n    (response) => {\r\n      const headerKeys = Props.DEFAULT_COLUMN_KEYS.slice(0, -2);\r\n      const customHeaderKeys = [\r\n        ...ServiceUtils.getCustomAttributeNames(type),\r\n        ...Props.DB_COLUMN_KEYS,\r\n      ];\r\n      const rows = TableUtils.getRows(\r\n        response.data,\r\n        headerKeys,\r\n        customHeaderKeys\r\n      );\r\n      const children = TableUtils.formatChildData(\r\n        response.children,\r\n        headerKeys,\r\n        customHeaderKeys,\r\n        id\r\n      );\r\n      rows[0].children = children;\r\n      return rows;\r\n    },\r\n    [id, type]\r\n  );\r\n\r\n  const fetchData = React.useCallback(async () => {\r\n    try {\r\n      if (!id) return;\r\n      const columns = Props.OBJECT_COLUMNS(type);\r\n      const spaceUrl = localStorage.getItem(StorageConstants.SPACE3d);\r\n      setLoading(true);\r\n      const response = await Api.getAllChildren(type, spaceUrl, id);\r\n      if (!authenticateTableData(response)) {\r\n        return;\r\n      }\r\n      const rows = formattedData(response);\r\n      setProps(rows, [...columns], null, [<RollupMenu key=\"rollupCommand\" />]);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error);\r\n      auth.logout();\r\n      <Navigate to={Paths.LOGIN} />;\r\n    }\r\n  }, [formattedData, auth]);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [reRender, fetchData]);\r\n\r\n  const table = (\r\n    <>\r\n      <Details />\r\n      <ExpandablePanel summary={toolbar}>\r\n        <TableContainer component=\"div\">\r\n          <ObjectTable\r\n            type={type}\r\n            state={state}\r\n            setState={setState}\r\n            oldRows={oldRows}\r\n            loading={loading}\r\n            columns={Props.OBJECT_COLUMNS(type)}\r\n          />\r\n        </TableContainer>\r\n      </ExpandablePanel>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <ObjectContext.Provider\r\n      value={{ state, setState, oldRows, setOldRows, loading }}\r\n    >\r\n      <CustomTab\r\n        defaultTab=\"Object\"\r\n        tabsArray={[\r\n          {\r\n            label: 'Object',\r\n            element: table,\r\n            icon: <Info />,\r\n          },\r\n          {\r\n            label: 'Dashboard',\r\n            element: <ObjectGraphs />,\r\n            icon: <Dashboard />,\r\n          },\r\n        ]}\r\n      />\r\n    </ObjectContext.Provider>\r\n  );\r\n};\r\n\r\nObjectsTableContainer.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\nexport default ObjectsTableContainer;\r\n"],"names":["MassField","attribute","children","value","tolerance","getAttributeTolerance","upperLimitValue","Number","Upper","lowerLimitValue","Lower","Stack","direction","className","ArrowDropUp","color","Typography","component","variant","sx","ml","roundOff","ArrowDropDown","defaultProps","ActualMassField","objectDBData","sumActualMass","$numberDecimal","ChipField","label","CalculatedMassField","sumCalculatedMass","EstimatedMassField","sumEstimatedMass","object","useContext","ObjectContext","useState","setObjectDBData","header","Box","mb","mx","Grid","container","alignItems","item","xs","gutterBottom","state","data","title","revision","Constants","bestAvailable","bestAvailableV2","fetchData","useCallback","id","getTypeObjectById","response","React","summary","loading","Skeleton","height","Divider","gridTemplateColumns","mt","name","type","spacing","description","owner","flexGrow","display","justifyContent","orientation","flexItem","objects","options","fn","theme","useTheme","mode","palette","setState","executeFunction","bind","useEffect","series","labels","useChartSeriesAndLabels","chart","markers","size","style","stroke","width","tooltip","shared","intersect","xaxis","categories","show","legend","position","text","getAttributeSeries","getStateSeriesAndLabels","getMassSeriesAndLabels","plotOptions","bar","distributed","getAttributesBarSeries","primary","colors","main","light","defaultTab","tabsArray","setValue","tabs","map","icon","Tab","iconPosition","tabElements","element","TabPanel","TabContext","TabList","onChange","e","newValue","paddingLeft","paddingRight","rest","FormControlLabel","control","Radio","BEST_AVAILABLE","BEST_AVAILABLE_V2","ACTUAL_MASS","ESTIMATED_MASS","CALCULATED_MASS","getRollupOrder","ServiceUtils","ROLLUP_ORDER","split","sumChildRows","row","field","endItem","newValueParent","subItemsField","forEach","childval","hasChildren","isNaN","rollUpFromParent","newRows","findRowById","_","length","rollUpValue","updateCellValue","error","console","toast","rollup","customKeys","includes","getRollupField","rollupOrder","cField","sumMultiFieldChildRows","pField","sumMultiFieldChildRowsV2","currentVal","grandChildSum","rollupBestAvailable","isV2","getRollupBestAvailable","getRollupBestAvailableV2","rootRow","childRollUpValue","parentRollUpValue","calculate","rows","currentRows","paramValue","param","updateTypeObjectById","func","oldRows","setError","rollupStatus","setRollupStatus","handleSubmit","event","preventDefault","RollupUtils","target","useRollup","handleRadioChange","handleClickAway","massRadioFields","customAttribute","displayTitle","Label","attrName","Attribute","ClickAwayListener","onClickAway","onSubmit","FormControl","m","Switch","defaultChecked","RadioGroup","FormHelperText","Button","mr","StyledMenu","styled","props","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","marginTop","minWidth","grey","boxShadow","padding","fontSize","secondary","marginRight","backgroundColor","alpha","action","selectedOpacity","setLoading","startIcon","Functions","onClick","handleCalculate","anchorEl","setAnchorEl","open","Boolean","handleClose","undefined","disableElevation","currentTarget","endIcon","KeyboardArrowDown","MenuListProps","onClose","MenuItem","disableRipple","auth","useAuth","useTable","toolbar","reRender","setters","setProps","setOldRows","formattedData","headerKeys","Props","customHeaderKeys","TableUtils","columns","spaceUrl","localStorage","getItem","StorageConstants","Api","authenticateTableData","log","logout","Paths","table","TableContainer","ObjectTable","Info","Dashboard"],"sourceRoot":""}