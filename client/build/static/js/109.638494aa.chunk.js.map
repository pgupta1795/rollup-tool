{"version":3,"file":"static/js/109.638494aa.chunk.js","mappings":"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","sources":["Styles/StyledAccordion.js","components/Card/customPaper.jsx","components/Card/expandablePanel.jsx","components/GridTable/ObjectTable.jsx","components/GridTable/Cell/ActionsCell.jsx","components/GridTable/toolbar/pagination.jsx","components/GridTable/toolbar/toolbar.jsx","components/GridTable/toolbar/toolbarSkeleton.jsx","hooks/useTable.js","components/TableContainer/TypesTableContainer.jsx","pages/TypesPage.js"],"sourcesContent":["import MuiAccordion from '@mui/material/Accordion';\r\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\r\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\r\nimport React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\r\n\r\nexport const Accordion = styled((props) => (\r\n  <MuiAccordion disableGutters elevation={0} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  '&:not(:last-child)': {\r\n    borderBottom: 0,\r\n  },\r\n  '&:before': {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport const AccordionSummary = styled(({ toggle, ...restProps }) => (\r\n  <MuiAccordionSummary\r\n    expandIcon={\r\n      <ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} onClick={toggle} />\r\n    }\r\n    {...restProps}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === 'dark'\r\n      ? 'rgba(255, 255, 255, .05)'\r\n      : 'rgba(0, 0, 0, .03)',\r\n  flexDirection: 'row-reverse',\r\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n    transform: 'rotate(90deg)',\r\n  },\r\n  '& .MuiAccordionSummary-content': {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport const AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(1),\r\n  borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n}));\r\n","import { Box, Paper } from '@mui/material';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CustomPaper = ({ children }) => (\r\n  <Box\r\n    component=\"div\"\r\n    sx={{\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      mb: 1,\r\n    }}\r\n  >\r\n    <Paper\r\n      component=\"div\"\r\n      sx={{\r\n        width: '100%',\r\n      }}\r\n    >\r\n      {children}\r\n    </Paper>\r\n  </Box>\r\n);\r\n\r\nCustomPaper.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default CustomPaper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n} from '../../Styles/StyledAccordion';\r\nimport CustomPaper from './customPaper';\r\n\r\nconst ExpandablePanel = ({ summary, children }) => {\r\n  const [expand, setExpand] = React.useState(true);\r\n  const toggle = () => {\r\n    setExpand((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <CustomPaper>\r\n      <Accordion expanded={expand} sx={{ minHeight: 10 }}>\r\n        <AccordionSummary toggle={toggle}>{summary}</AccordionSummary>\r\n        <AccordionDetails>{children}</AccordionDetails>\r\n      </Accordion>\r\n    </CustomPaper>\r\n  );\r\n};\r\n\r\nExpandablePanel.propTypes = {\r\n  summary: PropTypes.element.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default ExpandablePanel;\r\n","import { Skeleton } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { getter } from '@progress/kendo-react-common';\r\nimport {\r\n  extendDataItem,\r\n  filterBy,\r\n  getSelectedState,\r\n  mapTree,\r\n  orderBy,\r\n  TreeList,\r\n} from '@progress/kendo-react-treelist';\r\nimport * as React from 'react';\r\nimport ActionsCell from './Cell/ActionsCell';\r\nimport * as TableUtils from './tableUtils';\r\nimport { rowEditColor } from '../../Styles/tableStyle';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\n\r\nconst idGetter = getter(TableUtils.DATA_ITEM_KEY);\r\n\r\nconst ObjectTable = ({\r\n  type,\r\n  state,\r\n  setState,\r\n  columns,\r\n  oldRows,\r\n  loading,\r\n  rowActionsRequired,\r\n}) => {\r\n  const object = React.useContext(ObjectContext);\r\n  const [selectedState, setSelectedState] = React.useState({});\r\n\r\n  const onSelectionChange = React.useCallback(\r\n    (event) => {\r\n      const newSelectedState = getSelectedState({\r\n        event,\r\n        selectedState,\r\n        dataItemKey: TableUtils.DATA_ITEM_KEY,\r\n      });\r\n      setSelectedState(newSelectedState);\r\n    },\r\n    [selectedState]\r\n  );\r\n\r\n  const onHeaderSelectionChange = React.useCallback((event) => {\r\n    const checkboxElement = event.syntheticEvent.target;\r\n    const { checked } = checkboxElement;\r\n    const newSelectedState = {};\r\n    event.dataItems.forEach((item) => {\r\n      newSelectedState[idGetter(item)] = checked;\r\n    });\r\n    setSelectedState(newSelectedState);\r\n  }, []);\r\n\r\n  const addExpandField = (dataTree) => {\r\n    const { expanded } = state;\r\n    return mapTree(dataTree, TableUtils.subItemsField, (item) =>\r\n      extendDataItem(item, TableUtils.subItemsField, {\r\n        expanded: expanded.includes(item.id),\r\n        selected: selectedState[idGetter(item)],\r\n        inEdit: Boolean(state.inEdit.find((i) => i.id === item.id)),\r\n      })\r\n    );\r\n  };\r\n\r\n  const processData = () => {\r\n    const { data, dataState } = state;\r\n    const filteredData = filterBy(\r\n      data,\r\n      dataState.filter,\r\n      TableUtils.subItemsField\r\n    );\r\n    const sortedData = orderBy(\r\n      filteredData,\r\n      dataState.sort,\r\n      TableUtils.subItemsField\r\n    );\r\n    return addExpandField(sortedData);\r\n  };\r\n\r\n  const enterEdit = (dataItem) => {\r\n    // if (TableUtils.isNotEditable(dataItem)) {\r\n    //   console.warn(Constants.PARENT_EDIT_WARNING);\r\n    //   toast.warning(Constants.PARENT_EDIT_WARNING);\r\n    //   return;\r\n    // }\r\n    setState({\r\n      ...state,\r\n      inEdit: [\r\n        ...state.inEdit,\r\n        extendDataItem(dataItem, TableUtils.subItemsField),\r\n      ],\r\n    });\r\n  };\r\n\r\n  const uploadSpecification = () => {};\r\n\r\n  const save = async (dataItem) => {\r\n    const newRows = await TableUtils.updateAttributes(\r\n      type,\r\n      dataItem,\r\n      state.data,\r\n      oldRows\r\n    );\r\n    const { inEdit, ...itemToSave } = dataItem;\r\n    setState({\r\n      ...state,\r\n      data: newRows,\r\n      inEdit: state.inEdit.filter((i) => i.id !== itemToSave.id),\r\n    });\r\n    object?.setOldRows(newRows);\r\n  };\r\n\r\n  const cancel = (editedItem) => {\r\n    const { inEdit } = state;\r\n    setState({\r\n      ...state,\r\n      data: oldRows,\r\n      inEdit: inEdit.filter((i) => i.id !== editedItem.id),\r\n    });\r\n  };\r\n\r\n  const CommandCell = ActionsCell(\r\n    enterEdit,\r\n    save,\r\n    cancel,\r\n    'inEdit',\r\n    uploadSpecification\r\n  );\r\n\r\n  const onItemChange = (event) => {\r\n    const { field, value, dataItem } = event;\r\n    const newRows = TableUtils.updateCellValue(\r\n      state.data,\r\n      dataItem.id,\r\n      field,\r\n      value\r\n    );\r\n    setState({\r\n      ...state,\r\n      data: newRows,\r\n    });\r\n  };\r\n\r\n  const cellRender = (td) => {\r\n    const extraProps = {\r\n      className: `${td.props.className} ${rowEditColor.DEFAULT}`,\r\n    };\r\n    return React.cloneElement(\r\n      td,\r\n      { ...td.props, ...extraProps },\r\n      td.props.children\r\n    );\r\n  };\r\n\r\n  const actionColumn = {\r\n    title: 'Object Actions',\r\n    width: '20%',\r\n    cell: CommandCell,\r\n  };\r\n\r\n  const allColumns = rowActionsRequired\r\n    ? [...columns.slice(0, 2), actionColumn, ...columns.slice(2)]\r\n    : columns;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Skeleton variant=\"rectangular\" height=\"55vh\" />\r\n      ) : (\r\n        <TreeList\r\n          style={{ minHeight: '55vh' }}\r\n          cellRender={cellRender}\r\n          expandField=\"expanded\"\r\n          selectedField=\"selected\"\r\n          editField=\"inEdit\"\r\n          subItemsField={TableUtils.subItemsField}\r\n          onExpandChange={(e) =>\r\n            setState({\r\n              ...state,\r\n              expanded: e.value\r\n                ? state.expanded.filter((id) => id !== e.dataItem.id)\r\n                : [...state.expanded, e.dataItem.id],\r\n            })\r\n          }\r\n          sortable={{\r\n            mode: 'multiple',\r\n          }}\r\n          {...state.dataState}\r\n          data={processData()}\r\n          onSelectionChange={onSelectionChange}\r\n          onHeaderSelectionChange={onHeaderSelectionChange}\r\n          onDataStateChange={(event) => {\r\n            setState({ ...state, dataState: event.dataState });\r\n          }}\r\n          onItemChange={onItemChange}\r\n          columns={allColumns}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nObjectTable.defaultProps = {\r\n  type: null,\r\n  rowActionsRequired: true,\r\n};\r\n\r\nObjectTable.propTypes = {\r\n  type: PropTypes.string,\r\n  state: PropTypes.any.isRequired,\r\n  setState: PropTypes.func.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  oldRows: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  rowActionsRequired: PropTypes.bool,\r\n};\r\nexport default ObjectTable;\r\n","/* eslint-disable react/prop-types */\r\nimport * as React from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport EditOffIcon from '@mui/icons-material/EditOff';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport { IconButton, Skeleton } from '@mui/material';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport { rowEditColor } from '../../../Styles/tableStyle';\r\n\r\nexport default function MyCommandCell(\r\n  enterEdit,\r\n  save,\r\n  cancel,\r\n  editField,\r\n  uploadSpecification\r\n) {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n\r\n  return class extends React.Component {\r\n    render() {\r\n      const { dataItem } = this.props;\r\n      return dataItem[editField] ? (\r\n        <td\r\n          colSpan=\"1\"\r\n          aria-colindex=\"10\"\r\n          aria-selected=\"false\"\r\n          role=\"gridcell\"\r\n          data-grid-col-index=\"9\"\r\n          className={rowEditColor.DEFAULT}\r\n        >\r\n          {editMode ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <>\r\n              <IconButton\r\n                aria-label=\"table edit save\"\r\n                onClick={async () => {\r\n                  setEditMode(true);\r\n                  await save(dataItem);\r\n                  setEditMode(false);\r\n                }}\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                title=\"Save Changes\"\r\n              >\r\n                <EditOffIcon color=\"inherit\" />\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label=\"table edit discard\"\r\n                onClick={() => cancel(dataItem)}\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                title=\"Discard Changes\"\r\n              >\r\n                <CancelIcon color=\"inherit\" />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </td>\r\n      ) : (\r\n        <td\r\n          colSpan=\"1\"\r\n          aria-colindex=\"10\"\r\n          aria-selected=\"false\"\r\n          role=\"gridcell\"\r\n          data-grid-col-index=\"9\"\r\n          className={rowEditColor.DEFAULT}\r\n        >\r\n          <IconButton\r\n            aria-label=\"table edit\"\r\n            onClick={() => enterEdit(dataItem)}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            title=\"Edit table Column\"\r\n          >\r\n            <EditIcon color=\"inherit\" />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"table upload specification\"\r\n            onClick={() => uploadSpecification(dataItem)}\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            title=\"Upload specification\"\r\n          >\r\n            <FileUploadIcon color=\"inherit\" />\r\n          </IconButton>\r\n        </td>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination as TablePagination } from '@mui/material';\r\n\r\nconst MyPagination = ({ current, onChange }) => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n      gap: '5px',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    }}\r\n  >\r\n    <TablePagination\r\n      size=\"small\"\r\n      component=\"div\"\r\n      shape=\"rounded\"\r\n      color=\"primary\"\r\n      count={current + 1}\r\n      onChange={onChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nMyPagination.propTypes = {\r\n  current: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default MyPagination;\r\n","import { Box, Fab } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport SimCardDownloadIcon from '@mui/icons-material/SimCardDownload';\r\nimport { ExcelExport } from '@progress/kendo-react-excel-export';\r\nimport { TreeList } from '@progress/kendo-react-treelist';\r\nimport * as TableUtils from '../tableUtils';\r\n\r\nconst Toolbar = ({\r\n  setRerender,\r\n  setLoading,\r\n  columns,\r\n  rows,\r\n  pagination,\r\n  otherMenuItems,\r\n}) => {\r\n  const refresh = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setRerender(true);\r\n    setLoading(false);\r\n  };\r\n\r\n  let exportResult;\r\n  const exportToExcel = () => {\r\n    const data = [];\r\n    rows.forEach((row) => {\r\n      TableUtils.flatten(row, data);\r\n    });\r\n    const options = exportResult.workbookOptions(data, columns);\r\n    let altIdx = 0;\r\n    options.sheets[0].rows.forEach((row) => {\r\n      if (row.type === 'data') {\r\n        if (altIdx % 2 !== 0)\r\n          row.cells.forEach((cell) => {\r\n            cell.background = '#aabbcc';\r\n          });\r\n        altIdx += 1;\r\n      }\r\n    });\r\n    options.sheets[0].columns = options.sheets[0].columns.map(({ width }) => ({\r\n      width: width + 40,\r\n      autoWidth: true,\r\n    }));\r\n    exportResult.save(options);\r\n  };\r\n\r\n  const exportTable = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    exportToExcel();\r\n    setLoading(false);\r\n  };\r\n\r\n  const excelExport = (\r\n    <ExcelExport\r\n      ref={(exporter) => {\r\n        exportResult = exporter;\r\n      }}\r\n      hierarchy\r\n    >\r\n      <TreeList data={rows} columns={columns} />\r\n    </ExcelExport>\r\n  );\r\n\r\n  return (\r\n    <div className=\"table-toolbar\">\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          columnGap: '10px',\r\n        }}\r\n      >\r\n        {otherMenuItems}\r\n        <Fab\r\n          style={{\r\n            maxHeight: '30px',\r\n            minHeight: '30px',\r\n            minWidth: '30px',\r\n            maxWidth: '30px',\r\n          }}\r\n          aria-label=\"table refresh\"\r\n          onClick={refresh}\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          title=\"Refresh table\"\r\n        >\r\n          <RefreshIcon color=\"inherit\" />\r\n        </Fab>\r\n        <Fab\r\n          style={{\r\n            maxHeight: '30px',\r\n            minHeight: '30px',\r\n            minWidth: '30px',\r\n            maxWidth: '30px',\r\n          }}\r\n          aria-label=\"table export-excel\"\r\n          onClick={exportTable}\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          title=\"Export to excel\"\r\n        >\r\n          <Box display=\"none\">{excelExport}</Box>\r\n          <SimCardDownloadIcon color=\"inherit\" />\r\n        </Fab>\r\n      </Box>\r\n      <Box sx={{ flexGrow: 1 }} display={{ xs: 'none', sm: 'block' }} />\r\n      <Box sx={{ flexGrow: 1 }}>{pagination}</Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.defaultProps = {\r\n  pagination: '',\r\n  otherMenuItems: [],\r\n};\r\n\r\nToolbar.propTypes = {\r\n  setRerender: PropTypes.func.isRequired,\r\n  setLoading: PropTypes.func.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  pagination: PropTypes.any,\r\n  otherMenuItems: PropTypes.array,\r\n};\r\nexport default Toolbar;\r\n","import { Box, Skeleton } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst ToolbarSkeleton = () => (\r\n  <Box\r\n    sx={{\r\n      display: 'flex',\r\n      columnGap: '10px',\r\n    }}\r\n  >\r\n    <Skeleton width={100} />\r\n    <Skeleton variant=\"circular\" width={30} height={30} />\r\n    <Skeleton variant=\"circular\" width={30} height={30} />\r\n  </Box>\r\n);\r\n\r\nexport default ToolbarSkeleton;\r\n","import React from 'react';\r\nimport Toolbar from '../components/GridTable/toolbar/toolbar';\r\nimport ToolbarSkeleton from '../components/GridTable/toolbar/toolbarSkeleton';\r\n\r\nexport default (sortField) => {\r\n  const [toolbar, setToolbar] = React.useState(<ToolbarSkeleton />);\r\n  const [state, setState] = React.useState({\r\n    data: [],\r\n    dataState: {\r\n      sort: [\r\n        sortField || {\r\n          field: 'name',\r\n          dir: 'asc',\r\n        },\r\n      ],\r\n      filter: [],\r\n    },\r\n    expanded: [1, 2, 32],\r\n    inEdit: [],\r\n    rollup: [],\r\n  });\r\n  const [details, setDetails] = React.useState({});\r\n  const [oldRows, setOldRows] = React.useState([]);\r\n  const [reRender, setRerender] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const setProps = (rows, columns, objDetails, pagination, menuItems) => {\r\n    setDetails(objDetails);\r\n    setState({\r\n      ...state,\r\n      data: rows,\r\n    });\r\n    setOldRows(rows);\r\n    setToolbar(\r\n      <Toolbar\r\n        setRerender={setRerender}\r\n        setLoading={setLoading}\r\n        columns={[...columns]}\r\n        rows={rows}\r\n        pagination={pagination}\r\n        otherMenuItems={menuItems || null}\r\n      />\r\n    );\r\n    setRerender(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  return [\r\n    toolbar,\r\n    state,\r\n    details,\r\n    oldRows,\r\n    reRender,\r\n    loading,\r\n    [setLoading, setState, setProps, setOldRows],\r\n  ];\r\n};\r\n","import { TableContainer } from '@mui/material';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../authentication/auth';\r\nimport * as Api from '../../helper/Api';\r\nimport Paths from '../../helper/Paths';\r\nimport StorageConstants from '../../helper/StorageConstants';\r\nimport ExpandablePanel from '../Card/expandablePanel';\r\nimport ObjectTable from '../GridTable/ObjectTable';\r\nimport MyPagination from '../GridTable/toolbar/pagination';\r\nimport * as Props from '../GridTable/props';\r\nimport * as TableUtils from '../GridTable/tableUtils';\r\nimport { authenticateTableData } from '../../utils/CommonUtils';\r\nimport useTable from '../../hooks/useTable';\r\nimport toast from '../../helper/toast';\r\n\r\nconst TypesTableContainer = ({ type }) => {\r\n  const auth = useAuth();\r\n  const [current, setCurrent] = React.useState(1);\r\n  const [toolbar, state, , oldRows, reRender, loading, setters] = useTable();\r\n  const [setLoading, setState, setProps] = setters;\r\n\r\n  const fetchData = React.useCallback(async () => {\r\n    try {\r\n      const pageSize = 30;\r\n      const columns = Props.DEFAULT_COLUMNS;\r\n      const spaceUrl = localStorage.getItem(StorageConstants.SPACE3d);\r\n      setLoading(true);\r\n      const response = await Api.searchObjects(\r\n        type,\r\n        spaceUrl,\r\n        pageSize,\r\n        (current - 1) * pageSize\r\n      );\r\n      if (!authenticateTableData(response)) {\r\n        return;\r\n      }\r\n      const headerKeys = Props.DEFAULT_COLUMN_KEYS;\r\n      const rows = TableUtils.getRows(response, headerKeys);\r\n      const pagination = (\r\n        <MyPagination\r\n          current={current}\r\n          onChange={(e, page) => setCurrent(page)}\r\n        />\r\n      );\r\n      setProps(rows, [...columns], null, pagination);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error);\r\n      auth.logout();\r\n      <Navigate to={Paths.LOGIN} />;\r\n    }\r\n  }, [type, current, auth]);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [reRender, fetchData]);\r\n\r\n  return (\r\n    <ExpandablePanel summary={toolbar}>\r\n      <TableContainer component=\"div\">\r\n        <ObjectTable\r\n          type={type}\r\n          state={state}\r\n          setState={setState}\r\n          oldRows={oldRows}\r\n          loading={loading}\r\n          columns={Props.DEFAULT_COLUMNS}\r\n        />\r\n      </TableContainer>\r\n    </ExpandablePanel>\r\n  );\r\n};\r\n\r\nTypesTableContainer.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\nexport default TypesTableContainer;\r\n","import * as React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport TypesTableContainer from '../components/TableContainer/TypesTableContainer';\r\nimport * as ServiceUtils from '../utils/ServiceUtils';\r\nimport toast from '../helper/toast';\r\nimport Constants from '../helper/Constants';\r\n\r\nconst TypesPage = () => {\r\n  const { type } = useParams();\r\n\r\n  return ServiceUtils.TYPES.includes(type) ? (\r\n    <TypesTableContainer type={type} />\r\n  ) : (\r\n    toast.warning(Constants.TYPE_NOT_CONFIGURED_WARNING)\r\n  );\r\n};\r\n\r\nexport default TypesPage;\r\n"],"names":["Accordion","styled","props","disableGutters","elevation","square","theme","border","palette","divider","borderBottom","display","AccordionSummary","toggle","restProps","expandIcon","ArrowForwardIosSharp","sx","fontSize","onClick","backgroundColor","mode","flexDirection","transform","marginLeft","spacing","AccordionDetails","MuiAccordionDetails","padding","borderTop","children","Box","component","flexGrow","width","mb","Paper","summary","React","expand","setExpand","expanded","minHeight","prev","idGetter","getter","TableUtils","ObjectTable","type","state","setState","columns","oldRows","loading","rowActionsRequired","object","ObjectContext","selectedState","setSelectedState","onSelectionChange","event","newSelectedState","getSelectedState","dataItemKey","onHeaderSelectionChange","checked","syntheticEvent","target","dataItems","forEach","item","save","dataItem","data","newRows","inEdit","itemToSave","filter","i","id","setOldRows","CommandCell","enterEdit","cancel","editField","uploadSpecification","editMode","setEditMode","this","colSpan","role","className","rowEditColor","Skeleton","IconButton","size","color","title","EditOff","Cancel","Edit","FileUpload","ActionsCell","extendDataItem","editedItem","actionColumn","cell","allColumns","slice","variant","height","TreeList","style","cellRender","td","extraProps","expandField","selectedField","subItemsField","onExpandChange","e","value","sortable","dataState","filteredData","filterBy","dataTree","mapTree","includes","selected","Boolean","find","addExpandField","orderBy","sort","processData","onDataStateChange","onItemChange","field","defaultProps","current","onChange","gap","alignItems","justifyContent","shape","count","Toolbar","exportResult","setRerender","setLoading","rows","pagination","otherMenuItems","excelExport","ExcelExport","ref","exporter","hierarchy","columnGap","Fab","maxHeight","minWidth","maxWidth","preventDefault","Refresh","row","options","workbookOptions","altIdx","sheets","cells","background","map","autoWidth","exportToExcel","SimCardDownload","xs","sm","sortField","toolbar","setToolbar","dir","rollup","details","setDetails","reRender","objDetails","menuItems","auth","useAuth","setCurrent","useTable","setters","setProps","fetchData","Props","spaceUrl","localStorage","getItem","StorageConstants","Api","response","authenticateTableData","headerKeys","page","console","error","toast","logout","Paths","TableContainer","useParams","ServiceUtils","Constants"],"sourceRoot":""}