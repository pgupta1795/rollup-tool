{"version":3,"file":"static/js/740.a5cbdb7a.chunk.js","mappings":"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","sources":["components/Button/Submit.jsx","../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","components/Rollup/command/RollupAll.jsx","components/Rollup/command/RollupBestAvailable.jsx","components/Rollup/command/RollupMass.jsx","components/Rollup/CalculationMenu.jsx","components/Rollup/RollupMenu.jsx","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import { Button } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Submit = ({ children, ...props }) => (\r\n  <Button\r\n    disableElevation\r\n    {...props}\r\n    sx={{ mt: 1, mr: 1 }}\r\n    type=\"submit\"\r\n    variant=\"contained\"\r\n    size=\"small\"\r\n  >\r\n    {children}\r\n  </Button>\r\n);\r\n\r\nSubmit.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\nexport default Submit;\r\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport default ClickAwayListener;","import { Checkbox, FormControlLabel } from '@mui/material';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCheckedForMassField } from '../../../features/rollup/Actions';\r\nimport {\r\n  isCheckedForAll,\r\n  isCheckedForAny,\r\n  setCheckedForAll,\r\n} from '../../../features/rollup/rollupSlice';\r\nimport Constants from '../../../helper/Constants';\r\nimport toast from '../../../helper/toast';\r\nimport { getMassAttributeNames } from '../../../utils/ServiceUtils';\r\n\r\nconst RollupAll = () => {\r\n  const dispatch = useDispatch();\r\n  const isAllChecked = useSelector(isCheckedForAll);\r\n  const isAnyChecked = useSelector(isCheckedForAny);\r\n\r\n  const handleChange = (event) => {\r\n    const { title } = event.target.labels[0];\r\n    const isChecked = event.target.checked;\r\n    if (isChecked) toast.info(title, { position: 'bottom-right' });\r\n    dispatch(setCheckedForAll(isChecked));\r\n    getMassAttributeNames().forEach((attribute) => {\r\n      dispatch(setCheckedForMassField({ attribute, isChecked }));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      label=\"All\"\r\n      title={Constants.CALCULATE_ALL}\r\n      control={\r\n        <Checkbox\r\n          checked={isAllChecked}\r\n          indeterminate={isAnyChecked}\r\n          onChange={handleChange}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default RollupAll;\r\n","import { FormControlLabel, Switch } from '@mui/material';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCheckedForBestAvailable } from '../../../features/rollup/Actions';\r\nimport { isCheckedForField } from '../../../features/rollup/rollupSlice';\r\nimport Constants from '../../../helper/Constants';\r\nimport toast from '../../../helper/toast';\r\nimport {\r\n  BEST_AVAILABLE,\r\n  BEST_AVAILABLE_DB_NAME,\r\n} from '../../../utils/RollupUtils';\r\n\r\nconst RollupBestAvailable = () => {\r\n  const dispatch = useDispatch();\r\n  const isBestChecked = useSelector((state) =>\r\n    isCheckedForField(state, BEST_AVAILABLE_DB_NAME)\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    const { title } = event.target.labels[0];\r\n    const isChecked = event.target.checked;\r\n    if (isChecked) toast.info(title, { position: 'bottom-right' });\r\n    dispatch(setCheckedForBestAvailable(isChecked));\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={<Switch onChange={handleChange} checked={isBestChecked} />}\r\n      value={BEST_AVAILABLE_DB_NAME}\r\n      label={BEST_AVAILABLE}\r\n      title={Constants.BEST_AVAILABLE}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RollupBestAvailable;\r\n","import { FormControlLabel, Switch } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCheckedForMassField } from '../../../features/rollup/Actions';\r\nimport { isCheckedForField } from '../../../features/rollup/rollupSlice';\r\nimport toast from '../../../helper/toast';\r\n\r\nconst RollupMass = ({ attribute, label }) => {\r\n  const dispatch = useDispatch();\r\n  const isMassChecked = useSelector((state) =>\r\n    isCheckedForField(state, attribute)\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    const { title } = event.target.labels[0];\r\n    const isChecked = event.target.checked;\r\n    if (isChecked) toast.info(title, { position: 'bottom-right' });\r\n    dispatch(setCheckedForMassField({ attribute, isChecked }));\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={<Switch onChange={handleChange} checked={isMassChecked} />}\r\n      value={attribute}\r\n      label={label}\r\n      title={`Rollup ${label}`}\r\n      key={attribute}\r\n    />\r\n  );\r\n};\r\n\r\nRollupMass.propTypes = {\r\n  attribute: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RollupMass;\r\n","import {\r\n  Box,\r\n  ClickAwayListener,\r\n  FormHelperText as InfoText,\r\n} from '@mui/material';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport React, { memo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handleClickAway } from '../../features/rollup/Actions';\r\nimport { getCheckedFields, hasError } from '../../features/rollup/rollupSlice';\r\nimport { getTableData } from '../../features/table/structureTableSlice';\r\nimport Constants from '../../helper/Constants';\r\nimport toast from '../../helper/toast';\r\nimport { calculate } from '../../utils/RollupUtils';\r\nimport { getMassAttributeDetails } from '../../utils/ServiceUtils';\r\nimport Submit from '../Button/Submit';\r\nimport RollupAll from './command/RollupAll';\r\nimport RollupBestAvailable from './command/RollupBestAvailable';\r\nimport RollupMass from './command/RollupMass';\r\n\r\nconst CalculationMenu = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const tableData = useSelector(getTableData);\r\n  const rows = [tableData && JSON.parse(JSON.stringify(tableData[0]))];\r\n  const values = useSelector(getCheckedFields);\r\n  const error = useSelector(hasError);\r\n\r\n  /**\r\n   * When submitting the rollup form,\r\n   * after adding calculation of rollup values in local DB,\r\n   * add the cachedTableData back into tableData in redux store\r\n   *\r\n   * @param {*} event\r\n   */\r\n  const handleSubmit = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      const newRows = [...rows];\r\n      values.forEach((value) => {\r\n        calculate(newRows, value);\r\n      });\r\n      dispatch(handleClickAway());\r\n    } catch (e) {\r\n      console.error(e);\r\n      toast.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={() => dispatch(handleClickAway())}>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl error={error}>\r\n          <RollupAll />\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\r\n            {getMassAttributeDetails().map(({ Label, Attribute }) => (\r\n              <RollupMass attribute={Attribute} label={Label} key={Attribute} />\r\n            ))}\r\n            <RollupBestAvailable />\r\n          </Box>\r\n          {error ? <InfoText>{Constants.ROLLUP_MENU_SELECT}</InfoText> : null}\r\n          <Submit>Calculate</Submit>\r\n        </FormControl>\r\n      </form>\r\n    </ClickAwayListener>\r\n  );\r\n});\r\n\r\nexport default CalculationMenu;\r\n","import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport React, { useState } from 'react';\r\nimport StyledMenu from '../../Styles/StyledMenu';\r\nimport TableButton from '../Button/TableButton';\r\nimport CalculationMenu from './CalculationMenu';\r\n\r\nconst RollupMenu = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableButton\r\n        onClick={(e) => setAnchorEl(e.currentTarget)}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        Rollup\r\n      </TableButton>\r\n      <StyledMenu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem disableRipple>\r\n          <CalculationMenu func={handleClose} />\r\n        </MenuItem>\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RollupMenu;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"names":["children","props","disableElevation","sx","mt","mr","type","variant","size","mapEventPropToEvent","eventProp","substring","toLowerCase","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","composedPath","indexOf","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_jsx","dispatch","useDispatch","isAllChecked","useSelector","isCheckedForAll","isAnyChecked","isCheckedForAny","FormControlLabel","label","title","Constants","control","Checkbox","checked","indeterminate","onChange","labels","isChecked","toast","position","setCheckedForAll","getMassAttributeNames","forEach","attribute","setCheckedForMassField","isBestChecked","state","isCheckedForField","BEST_AVAILABLE_DB_NAME","Switch","setCheckedForBestAvailable","value","BEST_AVAILABLE","isMassChecked","CalculationMenu","memo","tableData","getTableData","rows","JSON","parse","stringify","values","getCheckedFields","error","hasError","handleSubmit","preventDefault","newRows","calculate","e","console","onSubmit","FormControl","Box","display","flexDirection","ml","getMassAttributeDetails","map","Label","Attribute","Submit","useState","anchorEl","setAnchorEl","handleClose","TableButton","onClick","currentTarget","endIcon","KeyboardArrowDown","StyledMenu","open","Boolean","onClose","MenuItem","disableRipple","func","getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","styled","name","overridesResolver","styles","ownerState","formControlLabelClasses","root","capitalize","labelPlacement","theme","_extends","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","color","vars","palette","text","disabled","inProps","_slotProps$typography","useThemeProps","className","componentsProps","disabledProp","disableTypography","labelProp","slotProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","key","fcs","formControlState","states","classes","slots","composeClasses","useUtilityClasses","typographySlotProps","typography","Typography","component","clsx","_jsxs"],"sourceRoot":""}