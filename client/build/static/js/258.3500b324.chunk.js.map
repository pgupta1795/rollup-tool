{"version":3,"file":"static/js/258.3500b324.chunk.js","mappings":"gTAOMA,GAAgBC,EAAAA,EAAAA,OAAK,SAACC,GAC1B,IAAMC,GAAQC,EAAAA,EAAAA,KAEZC,EAUEH,EAVFG,QACAC,EASEJ,EATFI,SACAC,EAQEL,EARFK,UACAC,EAOEN,EAPFM,QACAC,EAMEP,EANFO,QACAC,EAKER,EALFQ,KACAC,EAIET,EAJFS,OACAC,EAGEV,EAHFU,gBACAC,EAEEX,EAFFW,aACGC,GAAI,OACLZ,EAAU,GAEd,OACE,SAAC,MAAkB,QACjBa,MAAO,CAAEC,UAAWX,EAASY,iBAAkBX,GAC/CE,QAASA,EACTU,KAAMX,EACNY,SAAS,QACTC,uBAAwB,CAAEC,GAAI,CAAEC,UAAW,MAC3CC,mBAAoB,CAClBC,UAAW,GAEbC,sBAAuB,iBAAO,CAC5BJ,GAAI,CACFK,WAAY,OACZC,WAAW,GAAD,OAAKxB,EAAMyB,QAAQC,UAEhC,EACDC,WAAS,UACJC,EAAAA,IAELC,eAAe,qBACfC,yBAAuB,EACvBC,sBAAoB,EACpBC,sBAAoB,EACpBC,gBAAc,EACdC,eAAa,EACbC,kBAAgB,EAChBC,oBAAkB,EAClBC,sBAAuB,EACvBC,oBAAkB,EAClB5B,cAAY,UACPA,GAEL6B,iBAAe,EACfC,qBAAmB,EACnBC,8BAA+BnC,EAC/BoC,eAAa,EACbC,mCAAoC,SAACC,GAAK,MAAM,CAC9CC,SAAU,SAACC,GACTrC,EAAgBmC,EAAOE,EAAMC,OAAOC,MACtC,EACD,EACDC,YAAY,MACZC,iBAAkB3C,EAClB4C,mBAAoB3C,EACpB4C,wBAAyB,CACvB,kBAAmB,CACjB9B,sBAAuB,CACrB+B,MAAO,UAETC,KAAM,IACNC,QAAQ,SAAC,IAAY,MAGzBC,yBAAuB,GACnB7C,GAGV,IAEAd,EAAc4D,aAAe,CAC3BvD,SAAS,EACTC,UAAU,EACVG,QAAS,WAAO,EAChBC,KAAM,WACJmD,QAAQC,IAAI,kBACd,EACAnD,OAAQ,WACNkD,QAAQC,IAAI,kBACd,EACAlD,gBAAiB,SAACmC,EAAOgB,GAAc,IAAD,EAC9BC,EAAejB,EAAMkB,OACrBC,EAAYnB,EAAMoB,IAAIC,SAC5BP,QAAQC,IAAI,UAAD,OACa,OAAZE,QAAY,IAAZA,GAAuB,QAAX,EAAZA,EAAcK,iBAAS,WAAX,EAAZ,EAAyBX,OAAM,oCAAqC,OAATQ,QAAS,IAATA,OAAS,EAATA,EAAWI,MAAK,wBAAgBP,EAAQ,KAEjH,EACAlD,aAAc,CACZ0D,mBAAmB,EACnBC,QAAS,UACTC,kBAAkB,EAClBC,UAAU,IAgBd,W","sources":["components/Table/MaterialTable.jsx"],"sourcesContent":["import SettingsIcon from '@mui/icons-material/Settings';\r\nimport { useTheme } from '@mui/material';\r\nimport MaterialReactTable from 'material-react-table';\r\nimport PropTypes from 'prop-types';\r\nimport React, { memo } from 'react';\r\nimport { filterFunctions } from '../../utils/TableUtils';\r\n\r\nconst MaterialTable = memo((tableProps) => {\r\n  const theme = useTheme();\r\n  const {\r\n    loading,\r\n    isSaving,\r\n    tableData,\r\n    columns,\r\n    toolbar,\r\n    save,\r\n    cancel,\r\n    onColumnsChange,\r\n    initialState,\r\n    ...rest\r\n  } = tableProps;\r\n\r\n  return (\r\n    <MaterialReactTable\r\n      state={{ isLoading: loading, showProgressBars: isSaving }}\r\n      columns={columns}\r\n      data={tableData}\r\n      memoMode=\"cells\"\r\n      muiTableContainerProps={{ sx: { minHeight: 250 } }}\r\n      muiTablePaperProps={{\r\n        elevation: 0,\r\n      }}\r\n      muiTableHeadCellProps={() => ({\r\n        sx: {\r\n          fontWeight: 'bold',\r\n          background: `${theme.palette.divider}`,\r\n        },\r\n      })}\r\n      filterFns={{\r\n        ...filterFunctions,\r\n      }}\r\n      globalFilterFn=\"customGlobalSearch\" // custom function to enable searching from search function\r\n      enableColumnFilterModes\r\n      enableColumnOrdering\r\n      enableColumnResizing\r\n      enableGrouping\r\n      enablePinning\r\n      enableRowActions\r\n      enableRowSelection // Sub Rows are selected in Tree With Selection of Parent\r\n      maxLeafRowFilterDepth={0}\r\n      enableStickyHeader\r\n      initialState={{\r\n        ...initialState,\r\n      }}\r\n      enableExpanding\r\n      enableBottomToolbar\r\n      renderTopToolbarCustomActions={toolbar}\r\n      enableEditing\r\n      muiTableBodyCellEditTextFieldProps={(props) => ({\r\n        onChange: (event) => {\r\n          onColumnsChange(props, event.target.value);\r\n        },\r\n      })}\r\n      editingMode=\"row\"\r\n      onEditingRowSave={save}\r\n      onEditingRowCancel={cancel}\r\n      displayColumnDefOptions={{\r\n        'mrt-row-actions': {\r\n          muiTableHeadCellProps: {\r\n            align: 'center',\r\n          },\r\n          size: 100,\r\n          header: <SettingsIcon />,\r\n        },\r\n      }}\r\n      enableRowVirtualization\r\n      {...rest}\r\n    />\r\n  );\r\n});\r\n\r\nMaterialTable.defaultProps = {\r\n  loading: false,\r\n  isSaving: false,\r\n  toolbar: () => {},\r\n  save: () => {\r\n    console.log('SAVING ROW DATA');\r\n  },\r\n  cancel: () => {\r\n    console.log('CANCEL ROW EDIT');\r\n  },\r\n  onColumnsChange: (props, newValue) => {\r\n    const columnInEdit = props.column;\r\n    const rowInEdit = props.row.original;\r\n    console.log(\r\n      `Column ${columnInEdit?.columnDef?.header} is in edit mode for row ${rowInEdit?.title} to newValue ${newValue} `\r\n    );\r\n  },\r\n  initialState: {\r\n    showColumnFilters: false,\r\n    density: 'compact',\r\n    showGlobalFilter: false,\r\n    expanded: true,\r\n  },\r\n};\r\n\r\nMaterialTable.propTypes = {\r\n  loading: PropTypes.bool,\r\n  isSaving: PropTypes.bool,\r\n  tableData: PropTypes.array.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  toolbar: PropTypes.any,\r\n  save: PropTypes.func,\r\n  cancel: PropTypes.func,\r\n  onColumnsChange: PropTypes.func,\r\n  initialState: PropTypes.object,\r\n};\r\n\r\nexport default MaterialTable;\r\n"],"names":["MaterialTable","memo","tableProps","theme","useTheme","loading","isSaving","tableData","columns","toolbar","save","cancel","onColumnsChange","initialState","rest","state","isLoading","showProgressBars","data","memoMode","muiTableContainerProps","sx","minHeight","muiTablePaperProps","elevation","muiTableHeadCellProps","fontWeight","background","palette","divider","filterFns","filterFunctions","globalFilterFn","enableColumnFilterModes","enableColumnOrdering","enableColumnResizing","enableGrouping","enablePinning","enableRowActions","enableRowSelection","maxLeafRowFilterDepth","enableStickyHeader","enableExpanding","enableBottomToolbar","renderTopToolbarCustomActions","enableEditing","muiTableBodyCellEditTextFieldProps","props","onChange","event","target","value","editingMode","onEditingRowSave","onEditingRowCancel","displayColumnDefOptions","align","size","header","enableRowVirtualization","defaultProps","console","log","newValue","columnInEdit","column","rowInEdit","row","original","columnDef","title","showColumnFilters","density","showGlobalFilter","expanded"],"sourceRoot":""}