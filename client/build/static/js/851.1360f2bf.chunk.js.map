{"version":3,"file":"static/js/851.1360f2bf.chunk.js","mappings":"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","sources":["components/Form/Details.jsx","hooks/useChartSeriesAndLabels.js","components/Graphs/chartAttributes.jsx","components/Graphs/chartStates.jsx","components/Graphs/chartMassDistribution.jsx","components/Graphs/chartAttributesBar.jsx","components/Graphs/objectGraphs.jsx","components/Card/customTab.jsx","components/Common/RadioField.jsx","components/GridTable/rollupUtils.js","components/GridTable/toolbar/calculationMenuItem.jsx","Styles/StyledMenu.js","components/GridTable/toolbar/rollupMenu.jsx","components/TableContainer/ObjectsTableContainer.jsx"],"sourcesContent":["import { Divider, Stack, Typography } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Box from '@mui/material/Box';\r\n// import Button from \"@mui/material/Button\";\r\nimport Grid from '@mui/material/Grid';\r\nimport ExpandablePanel from '../Card/expandablePanel';\r\nimport ChipField from '../Common/ChipField';\r\n\r\nconst Details = ({ data }) => {\r\n  const header = (\r\n    <Box sx={{ mb: 1, mx: 2 }}>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item xs>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {data?.name || ''}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n            {data?.revision || ''}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Typography color=\"text.secondary\" variant=\"body2\">\r\n        {data?.type || ''}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <ExpandablePanel summary={<Typography color=\"primary\">Details</Typography>}>\r\n      <>\r\n        {header}\r\n        <Divider variant=\"middle\" />\r\n        <Box sx={{ mt: 1, mx: 2 }}>\r\n          <Typography gutterBottom variant=\"subtitle1\">\r\n            {data?.title || ''}\r\n          </Typography>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <ChipField label=\"Description\" value={data?.description || ''} />\r\n            <ChipField label=\"Owner\" value={data?.owner || ''} />\r\n            <ChipField label=\"Created\" value={data?.created || ''} />\r\n            <ChipField label=\"Modified\" value={data?.modified || ''} />\r\n          </Stack>\r\n        </Box>\r\n        {/* <BOX SX={{ MT: 3, ML: 1, MB: 1 }}>\r\n        <BUTTON>ADD TO CART</BUTTON>\r\n      </BOX> */}\r\n      </>\r\n    </ExpandablePanel>\r\n  );\r\n};\r\n\r\nDetails.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\nexport default Details;\r\n","import { useEffect, useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nexport default (objects, options, fn) => {\r\n  const theme = useTheme();\r\n  const [state, setState] = useState({\r\n    ...options,\r\n    theme: {\r\n      mode: theme.palette.mode,\r\n      palette: 'palette7',\r\n    },\r\n  });\r\n  const executeFunction = fn.bind(this);\r\n\r\n  useEffect(() => {\r\n    const [series, labels] = executeFunction(\r\n      objects?.state.data,\r\n      'VPMReference'\r\n    );\r\n    setState({\r\n      ...state,\r\n      series,\r\n      options: {\r\n        theme: {\r\n          mode: theme.palette.mode,\r\n          palette: 'palette7',\r\n        },\r\n        labels,\r\n      },\r\n    });\r\n  }, [objects, theme]);\r\n\r\n  return state;\r\n};\r\n","import React, { useContext } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport useChartSeriesAndLabels from '../../hooks/useChartSeriesAndLabels';\r\nimport { getAttributeSeries } from '../../utils/ChartUtils';\r\n\r\nconst AttributesChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        id: 'attributesChart',\r\n        type: 'line',\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        style: 'hollow',\r\n      },\r\n      stroke: {\r\n        width: 1,\r\n      },\r\n      tooltip: {\r\n        shared: true,\r\n        intersect: false,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n        labels: {\r\n          show: false,\r\n        },\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        text: 'Attributes',\r\n      },\r\n    },\r\n  };\r\n  const object = useContext(ObjectContext);\r\n  const state = useChartSeriesAndLabels(object, options, getAttributeSeries);\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"line\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttributesChart;\r\n","import React, { useContext } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport useChartSeriesAndLabels from '../../hooks/useChartSeriesAndLabels';\r\nimport { getStateSeriesAndLabels } from '../../utils/ChartUtils';\r\n\r\nconst StatesChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      labels: [],\r\n      chart: {\r\n        id: 'statesChart',\r\n      },\r\n      title: {\r\n        text: 'STATES',\r\n      },\r\n    },\r\n  };\r\n  const object = useContext(ObjectContext);\r\n  const state = useChartSeriesAndLabels(\r\n    object,\r\n    options,\r\n    getStateSeriesAndLabels\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"pie\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatesChart;\r\n","import React, { useContext } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport useChartSeriesAndLabels from '../../hooks/useChartSeriesAndLabels';\r\nimport { getMassSeriesAndLabels } from '../../utils/ChartUtils';\r\n\r\nconst MassDistributionChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      labels: [],\r\n      chart: {\r\n        id: 'massDistributionChart',\r\n      },\r\n      title: {\r\n        text: 'Mass Distribution',\r\n      },\r\n    },\r\n  };\r\n  const object = useContext(ObjectContext);\r\n  const state = useChartSeriesAndLabels(\r\n    object,\r\n    options,\r\n    getMassSeriesAndLabels\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"pie\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MassDistributionChart;\r\n","import React, { useContext } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport useChartSeriesAndLabels from '../../hooks/useChartSeriesAndLabels';\r\nimport { getAttributesBarSeries } from '../../utils/ChartUtils';\r\n\r\nconst AttributesBarChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        id: 'rootObjectAttributesChart',\r\n      },\r\n      title: {\r\n        text: 'Attributes Distribution',\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          distributed: true,\r\n        },\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n  const object = useContext(ObjectContext);\r\n  const state = useChartSeriesAndLabels(\r\n    object,\r\n    options,\r\n    getAttributesBarSeries\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"bar\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttributesBarChart;\r\n","import { Grid } from '@mui/material';\r\nimport { deepPurple, indigo, purple } from '@mui/material/colors';\r\nimport React from 'react';\r\nimport AttributesChart from './chartAttributes';\r\nimport StatesChart from './chartStates';\r\nimport MassDistributionChart from './chartMassDistribution';\r\nimport AttributesBarChart from './chartAttributesBar';\r\nimport GraphContainer from './graphContainer';\r\n\r\nconst ObjectGraphs = () => (\r\n  <GraphContainer\r\n    colors={[indigo[100], deepPurple[300], purple[300]]}\r\n    height=\"90vh\"\r\n  >\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={3}>\r\n        <StatesChart />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <MassDistributionChart />\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <AttributesBarChart />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <AttributesChart />\r\n      </Grid>\r\n    </Grid>\r\n  </GraphContainer>\r\n);\r\n\r\nexport default ObjectGraphs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tab } from '@mui/material';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\n\r\nconst CustomTab = ({ defaultTab, tabsArray }) => {\r\n  const [value, setValue] = React.useState(defaultTab);\r\n\r\n  const tabs = tabsArray.map(({ label, icon }) => (\r\n    <Tab\r\n      value={label}\r\n      label={label}\r\n      key={label}\r\n      icon={icon}\r\n      iconPosition=\"start\"\r\n    />\r\n  ));\r\n\r\n  const tabElements = tabsArray.map(({ label, element }) => (\r\n    <TabPanel value={label} className=\"full-width-height\" key={label}>\r\n      {element}\r\n    </TabPanel>\r\n  ));\r\n\r\n  return (\r\n    <TabContext value={value}>\r\n      <TabList\r\n        value={value}\r\n        onChange={(e, newValue) => setValue(newValue)}\r\n        textColor=\"secondary\"\r\n        indicatorColor=\"secondary\"\r\n        aria-label=\"secondary tabs example\"\r\n        sx={{ paddingLeft: '24px', paddingRight: '24px' }}\r\n      >\r\n        {tabs}\r\n      </TabList>\r\n      {tabElements}\r\n    </TabContext>\r\n  );\r\n};\r\n\r\nCustomTab.propTypes = {\r\n  defaultTab: PropTypes.string.isRequired,\r\n  tabsArray: PropTypes.array.isRequired,\r\n};\r\nexport default CustomTab;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormControlLabel, Radio, Typography } from '@mui/material';\r\n\r\nconst RadioField = ({ value, label, title }) => (\r\n  <FormControlLabel\r\n    value={value}\r\n    control={<Radio />}\r\n    title={title}\r\n    label={<Typography variant=\"subtitle2\">{label}</Typography>}\r\n  />\r\n);\r\n\r\nRadioField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default RadioField;\r\n","import _ from 'lodash';\r\nimport { authenticateTableData } from '../../utils/CommonUtils';\r\nimport * as Api from '../../helper/Api';\r\nimport * as ServiceUtils from '../../utils/ServiceUtils';\r\nimport toast from '../../helper/toast';\r\nimport {\r\n  subItemsField,\r\n  findRowById,\r\n  updateCellValue,\r\n  createAction,\r\n} from './tableUtils';\r\n\r\nexport const getRollupOrder = () => {\r\n  const typeSettings = ServiceUtils.getTypeSettings('VPMReference');\r\n  return typeSettings.ROLLUP_ORDER;\r\n};\r\n\r\n/**\r\n * updates the newValue to itself and summating it till parent level\r\n * @param {*} id\r\n * @param {*} newRows\r\n * @param {*} field\r\n * @returns\r\n */\r\nexport const rollUpFromChildren = (id, newRows, field) => {\r\n  try {\r\n    const row = id ? findRowById(newRows, id) : '';\r\n    if (row) {\r\n      let newValueParent = 0;\r\n      if (row[subItemsField]) {\r\n        row[subItemsField].forEach((children) => {\r\n          const childval = Number(children[field]);\r\n          newValueParent += Number.isNaN(childval) ? 0 : childval;\r\n        });\r\n        newRows = updateCellValue(newRows, id, field, newValueParent);\r\n      }\r\n      newRows = rollUpFromChildren(row?.parent, newRows, field);\r\n    }\r\n    return newRows;\r\n  } catch (error) {\r\n    console.error(error);\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param {parentrow} row\r\n * @param {field name to use for sum children data} field\r\n * @returns\r\n */\r\nconst sumChildRows = (row, field) => {\r\n  let newValueParent = 0;\r\n  row[subItemsField].forEach((children) => {\r\n    const childval = Number(children[field]);\r\n    newValueParent += Number.isNaN(childval) ? 0 : childval;\r\n  });\r\n  return newValueParent;\r\n};\r\n\r\n/**\r\n * updates the newValue by summing up values from parent\r\n * @param {parentId} id\r\n * @param {data rows} newRows\r\n * @param {field to rollup} field\r\n * @returns\r\n */\r\nexport const rollUpFromParent = (id, newRows, field) => {\r\n  try {\r\n    const row = id ? findRowById(newRows, id) : '';\r\n    if (\r\n      !row ||\r\n      _.isUndefined(row[subItemsField]) ||\r\n      (row[subItemsField] && row[subItemsField].length === 0)\r\n    ) {\r\n      return newRows;\r\n    }\r\n    row[subItemsField].forEach((children) => {\r\n      newRows = rollUpFromParent(children.id, newRows, field);\r\n    });\r\n    const rollUpValue = sumChildRows(row, field);\r\n    return updateCellValue(newRows, id, field, rollUpValue);\r\n  } catch (error) {\r\n    console.error(error);\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Shows the probable rollup values on table views,without commiting it to database\r\n * @param {event} event\r\n * @param {state} state\r\n * @returns\r\n */\r\nexport const rollup = (field, newRows) => {\r\n  const customKeys = ServiceUtils.getCustomAttributeNames();\r\n  if (customKeys?.includes(field)) {\r\n    const { id } = newRows[0];\r\n    newRows = rollUpFromParent(id, newRows, field);\r\n  }\r\n  return newRows;\r\n};\r\n\r\nconst hasChildren = (row) =>\r\n  row[subItemsField] && row[subItemsField].length > 0;\r\n\r\n/**\r\n * 1.) Creates object in mongodb database if not already present\r\n * 2.) Updates attribute values in enovia using webservice\r\n * 3.) Creates action if above things are success\r\n * 4.) Updates cestamp with a new value for the object after updation in enovia\r\n *\r\n * @param {type} type\r\n * @param {selectedRow} selectedRow\r\n * @param {newRows} newRows\r\n * @param {oldRows} oldRows\r\n * @returns\r\n */\r\nexport const actualEnoviaRollup = async (\r\n  type,\r\n  currentRow,\r\n  newRows,\r\n  oldRows\r\n) => {\r\n  try {\r\n    await Api.createTypeObject(type, currentRow);\r\n    const response = await Api.updateObject(type, currentRow);\r\n    if (!authenticateTableData(response)) {\r\n      return newRows;\r\n    }\r\n    await createAction(currentRow, oldRows);\r\n    const id = response?.member[0].id;\r\n    const newCEStamp = response?.member[0].cestamp;\r\n    if (id && newCEStamp) {\r\n      newRows = updateCellValue(newRows, id, 'cestamp', newCEStamp);\r\n    }\r\n    if (!hasChildren(currentRow)) {\r\n      return newRows;\r\n    }\r\n    await Promise.all(\r\n      currentRow[subItemsField].map(async (children) => {\r\n        newRows = await actualEnoviaRollup(type, children, newRows, oldRows);\r\n      })\r\n    );\r\n    return newRows;\r\n  } catch (error) {\r\n    console.error(error);\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from '@mui/material/Button';\r\nimport {\r\n  ClickAwayListener,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Switch,\r\n  Typography,\r\n} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport Constants from '../../../helper/Constants';\r\nimport toast from '../../../helper/toast';\r\nimport RadioField from '../../Common/RadioField';\r\nimport * as ServiceUtils from '../../../utils/ServiceUtils';\r\nimport { ObjectContext } from '../../../hooks/contexts';\r\nimport * as RollupUtils from '../rollupUtils';\r\n\r\nconst BEST_AVAILABLE = 'Best Available';\r\n\r\nconst BEST_AVAILABLE_V2 = 'Best Available v2';\r\n\r\nconst CalculationMenu = ({ func }) => {\r\n  const object = React.useContext(ObjectContext);\r\n  const { state, setState, oldRows, setOldRows } = object;\r\n  const [value, setValue] = React.useState('');\r\n  const [error, setError] = React.useState(false);\r\n  const [rollupStatus, setRollupStatus] = React.useState(false);\r\n\r\n  const rollupBestAvailable = () => {\r\n    // Actual > Estimated > Calculated\r\n    // const rollupOrder = RollupUtils.getRollupOrder().split('>');\r\n    // const newRows = RollupUtils.rollup(field, state.data);\r\n  };\r\n\r\n  const rollupBestAvailableV2 = () => {};\r\n\r\n  const handleRadioChange = (event) => {\r\n    const field = event.target.value;\r\n    setValue(field);\r\n\r\n    if (field === BEST_AVAILABLE) {\r\n      const { title } = event.target.labels[0];\r\n      toast.info(title, { autoClose: 5000 });\r\n      rollupBestAvailable();\r\n      return;\r\n    }\r\n\r\n    if (field === BEST_AVAILABLE_V2) {\r\n      const { title } = event.target.labels[0];\r\n      toast.info(title, { autoClose: 5000 });\r\n      rollupBestAvailableV2();\r\n      return;\r\n    }\r\n\r\n    const newRows = RollupUtils.rollup(field, state.data);\r\n    setRollupStatus(false);\r\n    setState({\r\n      ...state,\r\n      data: newRows,\r\n      rollup: [field],\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      if (!value) {\r\n        setError(true);\r\n        return;\r\n      }\r\n      func();\r\n      let { data: newRows } = state;\r\n      const rootRow = newRows[0];\r\n      newRows = await RollupUtils.actualEnoviaRollup(\r\n        rootRow.type,\r\n        rootRow,\r\n        newRows,\r\n        oldRows\r\n      );\r\n      setRollupStatus(true);\r\n      setState({ ...state, data: newRows, rollup: [] });\r\n      setOldRows(newRows);\r\n    } catch (err) {\r\n      setRollupStatus(false);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const customAttributes = ServiceUtils.getCustomAttributeKeys();\r\n  const massRadioFields = customAttributes.map((customAttribute) => {\r\n    const displayTitle = customAttribute.Label;\r\n    const attrName = customAttribute.Attribute;\r\n    if (!displayTitle.includes('Mass')) {\r\n      return null;\r\n    }\r\n    return (\r\n      <RadioField\r\n        value={attrName}\r\n        label={displayTitle}\r\n        title={`Rollup ${displayTitle}`}\r\n        key={displayTitle}\r\n      />\r\n    );\r\n  });\r\n\r\n  const handleClickAway = () => {\r\n    if (!rollupStatus) {\r\n      setState({ ...state, data: oldRows, rollup: [] });\r\n      return;\r\n    }\r\n    setState({ ...state, rollup: [] });\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl sx={{ m: 0.5 }} error={error} variant=\"standard\">\r\n          <FormControlLabel\r\n            control={<Switch defaultChecked />}\r\n            label={<Typography variant=\"subtitle2\">Add +5% or -5%</Typography>}\r\n          />\r\n          <RadioGroup\r\n            aria-labelledby=\"demo-error-radios\"\r\n            name=\"rollupCalculation\"\r\n            value={value}\r\n            onChange={handleRadioChange}\r\n          >\r\n            {massRadioFields}\r\n            <RadioField\r\n              value={BEST_AVAILABLE}\r\n              label={BEST_AVAILABLE}\r\n              title={Constants.BEST_AVAILABLE}\r\n            />\r\n            <RadioField\r\n              value={BEST_AVAILABLE_V2}\r\n              label={BEST_AVAILABLE_V2}\r\n              title={Constants.BEST_AVAILABLE_V2}\r\n            />\r\n          </RadioGroup>\r\n          {error ? (\r\n            <FormHelperText>Please select an option</FormHelperText>\r\n          ) : null}\r\n          <Button\r\n            sx={{ mt: 1, mr: 1 }}\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          >\r\n            Calculate\r\n          </Button>\r\n        </FormControl>\r\n      </form>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nCalculationMenu.propTypes = {\r\n  func: PropTypes.func.isRequired,\r\n};\r\nexport default CalculationMenu;\r\n","import React from 'react';\r\nimport { Menu } from '@mui/material';\r\nimport { styled, alpha } from '@mui/material/styles';\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color:\r\n      theme.palette.mode === 'light'\r\n        ? 'rgb(55, 65, 81)'\r\n        : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default StyledMenu;\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport CalculationMenu from './calculationMenuItem';\r\nimport StyledMenu from '../../../Styles/StyledMenu';\r\n\r\nconst RollupMenu = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"CUSTOM-HELLO\">\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls={open ? 'demo-customized-menu' : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"outlined\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n        size=\"small\"\r\n      >\r\n        Rollup\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem disableRipple>\r\n          <CalculationMenu func={handleClose} />\r\n        </MenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RollupMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { TableContainer } from '@mui/material';\r\nimport { Dashboard, Info } from '@mui/icons-material';\r\nimport { useAuth } from '../../authentication/auth';\r\nimport * as Api from '../../helper/Api';\r\nimport Paths from '../../helper/Paths';\r\nimport * as ServiceUtils from '../../utils/ServiceUtils';\r\nimport StorageConstants from '../../helper/StorageConstants';\r\nimport ExpandablePanel from '../Card/expandablePanel';\r\nimport Details from '../Form/Details';\r\nimport ObjectTable from '../GridTable/ObjectTable';\r\nimport * as Props from '../GridTable/props';\r\nimport * as TableUtils from '../GridTable/tableUtils';\r\nimport { authenticateTableData } from '../../utils/CommonUtils';\r\nimport useTable from '../../hooks/useTable';\r\nimport { ObjectContext } from '../../hooks/contexts';\r\nimport ObjectGraphs from '../Graphs/objectGraphs';\r\nimport CustomTab from '../Card/customTab';\r\nimport toast from '../../helper/toast';\r\nimport RollupMenu from '../GridTable/toolbar/rollupMenu';\r\n\r\nconst ObjectsTableContainer = ({ type, id }) => {\r\n  const auth = useAuth();\r\n  const [toolbar, state, details, oldRows, reRender, loading, setters] =\r\n    useTable();\r\n  const [setLoading, setState, setProps, setOldRows] = setters;\r\n  const formattedData = React.useCallback(\r\n    (response) => {\r\n      const headerKeys = Props.DEFAULT_COLUMN_KEYS.slice(0, -2);\r\n      const customHeaderKeys = ServiceUtils.getCustomAttributeNames(type);\r\n      const rows = TableUtils.getRows(\r\n        response.data,\r\n        headerKeys,\r\n        customHeaderKeys\r\n      );\r\n      const children = TableUtils.formatChildData(\r\n        response.children,\r\n        headerKeys,\r\n        customHeaderKeys,\r\n        id\r\n      );\r\n      rows[0].children = children;\r\n      const objDetails = TableUtils.getRows(\r\n        response.data,\r\n        Props.DEFAULT_COLUMN_KEYS,\r\n        customHeaderKeys\r\n      )[0];\r\n      return {\r\n        rows,\r\n        objDetails,\r\n      };\r\n    },\r\n    [id, type]\r\n  );\r\n\r\n  const fetchData = React.useCallback(async () => {\r\n    try {\r\n      if (!id) return;\r\n      const columns = Props.OBJECT_COLUMNS(type);\r\n      const spaceUrl = localStorage.getItem(StorageConstants.SPACE3d);\r\n      setLoading(true);\r\n      const response = await Api.getAllChildren(type, spaceUrl, id);\r\n      if (!authenticateTableData(response)) {\r\n        return;\r\n      }\r\n      const { rows, objDetails } = formattedData(response);\r\n      setProps(rows, [...columns], objDetails, null, [\r\n        <RollupMenu key=\"rollupCommand\" />,\r\n      ]);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error);\r\n      auth.logout();\r\n      <Navigate to={Paths.LOGIN} />;\r\n    }\r\n  }, [formattedData, auth]);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [reRender, fetchData]);\r\n\r\n  const table = (\r\n    <>\r\n      <Details data={details} />\r\n      <ExpandablePanel summary={toolbar}>\r\n        <TableContainer component=\"div\">\r\n          <ObjectTable\r\n            type={type}\r\n            state={state}\r\n            setState={setState}\r\n            oldRows={oldRows}\r\n            loading={loading}\r\n            columns={Props.OBJECT_COLUMNS(type)}\r\n          />\r\n        </TableContainer>\r\n      </ExpandablePanel>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <ObjectContext.Provider value={{ state, setState, oldRows, setOldRows }}>\r\n      <CustomTab\r\n        defaultTab=\"Object\"\r\n        tabsArray={[\r\n          {\r\n            label: 'Object',\r\n            element: table,\r\n            icon: <Info />,\r\n          },\r\n          {\r\n            label: 'Dashboard',\r\n            element: <ObjectGraphs />,\r\n            icon: <Dashboard />,\r\n          },\r\n        ]}\r\n      />\r\n    </ObjectContext.Provider>\r\n  );\r\n};\r\n\r\nObjectsTableContainer.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\nexport default ObjectsTableContainer;\r\n"],"names":["data","header","Box","sx","mb","mx","Grid","container","alignItems","item","xs","Typography","gutterBottom","variant","component","name","revision","color","type","summary","Divider","mt","title","Stack","direction","spacing","ChipField","label","value","description","owner","created","modified","objects","options","fn","theme","useTheme","useState","mode","palette","state","setState","executeFunction","bind","useEffect","series","labels","object","useContext","ObjectContext","useChartSeriesAndLabels","chart","id","markers","size","style","stroke","width","tooltip","shared","intersect","xaxis","categories","show","legend","position","text","getAttributeSeries","height","getStateSeriesAndLabels","getMassSeriesAndLabels","plotOptions","bar","distributed","getAttributesBarSeries","colors","indigo","deepPurple","purple","defaultTab","tabsArray","React","setValue","tabs","map","icon","Tab","iconPosition","tabElements","element","TabPanel","className","TabContext","TabList","onChange","e","newValue","textColor","indicatorColor","paddingLeft","paddingRight","FormControlLabel","control","Radio","rollUpFromParent","newRows","field","row","findRowById","_","subItemsField","length","forEach","children","rollUpValue","newValueParent","childval","Number","isNaN","sumChildRows","updateCellValue","error","console","toast","actualEnoviaRollup","currentRow","oldRows","Api","response","authenticateTableData","createAction","member","newCEStamp","cestamp","Promise","all","BEST_AVAILABLE","BEST_AVAILABLE_V2","func","setOldRows","setError","rollupStatus","setRollupStatus","handleSubmit","event","preventDefault","rootRow","RollupUtils","rollup","massRadioFields","ServiceUtils","customAttribute","displayTitle","Label","attrName","Attribute","includes","ClickAwayListener","onClickAway","onSubmit","FormControl","m","Switch","defaultChecked","RadioGroup","target","customKeys","autoClose","Constants","FormHelperText","Button","mr","StyledMenu","styled","props","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","borderRadius","marginTop","minWidth","grey","boxShadow","padding","fontSize","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","anchorEl","setAnchorEl","open","Boolean","handleClose","undefined","disableElevation","onClick","currentTarget","endIcon","KeyboardArrowDown","MenuListProps","onClose","MenuItem","disableRipple","auth","useAuth","useTable","toolbar","details","reRender","loading","setters","setLoading","setProps","formattedData","headerKeys","Props","customHeaderKeys","rows","TableUtils","objDetails","fetchData","columns","spaceUrl","localStorage","getItem","StorageConstants","log","logout","Paths","table","TableContainer","ObjectTable","Info","Dashboard"],"sourceRoot":""}