{"version":3,"file":"static/js/109.439f30d0.chunk.js","mappings":"sWA8EA,EA7D4B,SAAH,GAAkB,IAAZA,EAAI,EAAJA,KACvBC,GAAOC,EAAAA,EAAAA,KACb,EAA8BC,EAAAA,SAAe,GAAE,eAAxCC,EAAO,KAAEC,EAAU,KAC1B,GAA8DC,EAAAA,EAAAA,KAAU,eAAjEC,EAAO,KAAEC,EAAK,KAAEC,EAAO,KAAEC,EAAQ,KAAEC,EAAO,KAAEC,EAAO,KAC1D,UAAyCA,EAAO,GAAzCC,EAAU,KAAEC,EAAQ,KAAEC,EAAQ,KAE/BC,EAAYb,EAAAA,aAAiB,uBAAC,mGAKf,OALe,SAEf,GACXc,EAAUC,EAAAA,GACVC,EAAWC,aAAaC,QAAQC,EAAAA,EAAAA,SACtCT,GAAW,GAAM,SACMU,EAAAA,GACrBvB,EACAmB,EANe,OAQdf,EAAU,IACX,KAAD,EALa,GAARoB,EAAQ,QAMTC,EAAAA,EAAAA,IAAsBD,GAAU,CAAD,kDAG9BE,EAAaR,EAAAA,GACbS,EAAOC,EAAAA,GAAmBJ,EAAUE,GACpCG,GACJ,SAAC,IAAY,CACXzB,QAASA,EACT0B,SAAU,SAACC,EAAGC,GAAI,OAAK3B,EAAW2B,EAAK,IAG3CjB,EAASY,GAAK,OAAKV,GAAU,KAAMY,GAAY,kDAE/CI,QAAQC,MAAM,EAAD,IACbC,EAAAA,EAAAA,MAAY,EAAD,IACXlC,EAAKmC,SACJ,KAAaC,EAAAA,EAAAA,MAAgB,0DAE/B,CAACrC,EAAMI,EAASH,IAMnB,OAJAE,EAAAA,WAAgB,WACda,GACF,GAAG,CAACN,EAAUM,KAGZ,SAAC,IAAe,CAACsB,QAAS/B,EAAQ,UAChC,SAACgC,EAAA,EAAc,CAACC,UAAU,MAAK,UAC7B,SAACC,EAAA,EAAW,CACVzC,KAAMA,EACNQ,MAAOA,EACPM,SAAUA,EACVL,QAASA,EACTE,QAASA,EACTM,QAASC,EAAAA,QAKnB,E,oBCxDA,EAVkB,WAChB,IAAQlB,GAAS0C,EAAAA,EAAAA,MAAT1C,KAER,OAAO2C,EAAAA,GAAAA,SAA4B3C,IACjC,SAAC,EAAmB,CAACA,KAAMA,IAE3BmC,EAAAA,EAAAA,QAAcS,EAAAA,EAAAA,4BAElB,C","sources":["components/TableContainer/TypesTableContainer.jsx","pages/TypesPage.js"],"sourcesContent":["import { TableContainer } from '@mui/material';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../authentication/auth';\r\nimport * as Api from '../../helper/Api';\r\nimport Paths from '../../helper/Paths';\r\nimport StorageConstants from '../../helper/StorageConstants';\r\nimport ExpandablePanel from '../Card/expandablePanel';\r\nimport ObjectTable from '../GridTable/ObjectTable';\r\nimport MyPagination from '../GridTable/toolbar/pagination';\r\nimport * as Props from '../GridTable/props';\r\nimport * as TableUtils from '../GridTable/tableUtils';\r\nimport { authenticateTableData } from '../../utils/CommonUtils';\r\nimport useTable from '../../hooks/useTable';\r\nimport toast from '../../helper/toast';\r\n\r\nconst TypesTableContainer = ({ type }) => {\r\n  const auth = useAuth();\r\n  const [current, setCurrent] = React.useState(1);\r\n  const [toolbar, state, oldRows, reRender, loading, setters] = useTable();\r\n  const [setLoading, setState, setProps] = setters;\r\n\r\n  const fetchData = React.useCallback(async () => {\r\n    try {\r\n      const pageSize = 30;\r\n      const columns = Props.DEFAULT_COLUMNS;\r\n      const spaceUrl = localStorage.getItem(StorageConstants.SPACE3d);\r\n      setLoading(true);\r\n      const response = await Api.searchObjects(\r\n        type,\r\n        spaceUrl,\r\n        pageSize,\r\n        (current - 1) * pageSize\r\n      );\r\n      if (!authenticateTableData(response)) {\r\n        return;\r\n      }\r\n      const headerKeys = Props.DEFAULT_COLUMN_KEYS;\r\n      const rows = TableUtils.getRows(response, headerKeys);\r\n      const pagination = (\r\n        <MyPagination\r\n          current={current}\r\n          onChange={(e, page) => setCurrent(page)}\r\n        />\r\n      );\r\n      setProps(rows, [...columns], null, pagination);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error);\r\n      auth.logout();\r\n      <Navigate to={Paths.LOGIN} />;\r\n    }\r\n  }, [type, current, auth]);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [reRender, fetchData]);\r\n\r\n  return (\r\n    <ExpandablePanel summary={toolbar}>\r\n      <TableContainer component=\"div\">\r\n        <ObjectTable\r\n          type={type}\r\n          state={state}\r\n          setState={setState}\r\n          oldRows={oldRows}\r\n          loading={loading}\r\n          columns={Props.DEFAULT_COLUMNS}\r\n        />\r\n      </TableContainer>\r\n    </ExpandablePanel>\r\n  );\r\n};\r\n\r\nTypesTableContainer.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\nexport default TypesTableContainer;\r\n","import * as React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport TypesTableContainer from '../components/TableContainer/TypesTableContainer';\r\nimport * as ServiceUtils from '../utils/ServiceUtils';\r\nimport toast from '../helper/toast';\r\nimport Constants from '../helper/Constants';\r\n\r\nconst TypesPage = () => {\r\n  const { type } = useParams();\r\n\r\n  return ServiceUtils.TYPES.includes(type) ? (\r\n    <TypesTableContainer type={type} />\r\n  ) : (\r\n    toast.warning(Constants.TYPE_NOT_CONFIGURED_WARNING)\r\n  );\r\n};\r\n\r\nexport default TypesPage;\r\n"],"names":["type","auth","useAuth","React","current","setCurrent","useTable","toolbar","state","oldRows","reRender","loading","setters","setLoading","setState","setProps","fetchData","columns","Props","spaceUrl","localStorage","getItem","StorageConstants","Api","response","authenticateTableData","headerKeys","rows","TableUtils","pagination","onChange","e","page","console","error","toast","logout","Paths","summary","TableContainer","component","ObjectTable","useParams","ServiceUtils","Constants"],"sourceRoot":""}