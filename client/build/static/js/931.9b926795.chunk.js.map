{"version":3,"file":"static/js/931.9b926795.chunk.js","mappings":"wRA8CA,EAvCkB,SAAH,GAAmC,IAA7BA,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAC/B,EAA0BC,EAAAA,SAAeF,GAAW,eAA7CG,EAAK,KAAEC,EAAQ,KAEhBC,EAAOJ,EAAUK,KAAI,gBAAGC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OACvC,SAACC,EAAA,EAAG,CACFN,MAAOI,EACPA,MAAOA,EAEPC,KAAMA,EACNE,aAAa,QACbC,GAAI,CAAEC,IAAK,IAHNL,EAIL,IAGEM,EAAcZ,EAAUK,KAAI,gBAAGC,EAAK,EAALA,MAAOO,EAAO,EAAPA,QAAO,OACjD,SAACC,EAAA,EAAQ,CAACZ,MAAOI,EAAOS,UAAU,oBAAmB,SAClDF,GADwDP,EAEhD,IAGb,OACE,UAACU,EAAA,GAAU,CAACd,MAAOA,EAAM,WACvB,SAACe,EAAA,EAAO,CACNf,MAAOA,EACPgB,SAAU,SAACC,EAAGC,GAAQ,OAAKjB,EAASiB,EAAS,EAC7C,aAAW,yBACXV,GAAI,CAAEW,GAAI,OAAQC,GAAI,QAAS,SAE9BlB,IAEFQ,IAGP,E,4DCpCA,WAAgBW,EAAMC,EAASC,GAC7B,IAAMC,GAAQC,EAAAA,EAAAA,KACd,GAA0BC,EAAAA,EAAAA,WAAS,kBAC9BJ,GAAO,IACVE,MAAO,CACLG,KAAMH,EAAMI,QAAQD,KACpBC,QAAS,eAEX,eANKC,EAAK,KAAEC,EAAQ,KAOhBC,EAAkBR,EAAGS,K,WAiB3B,OAfAC,EAAAA,EAAAA,YAAU,WACR,MAAyBF,EAAgBV,EAAMa,EAAAA,GAAAA,IAAY,gBAAe,eAAnEC,EAAM,KAAEC,EAAM,KACrBN,GAAS,kBACJD,GAAK,IACRM,OAAAA,EACAb,QAAS,CACPE,MAAO,CACLG,KAAMH,EAAMI,QAAQD,KACpBC,QAAS,YAEXQ,OAAAA,KAGN,GAAG,CAACf,EAAMG,IAEHK,CACR,E,UCeD,EAvC2B,WACzB,IAmBMQ,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBV,EAAQW,EACZH,EArBc,CACdF,OAAQ,GACRb,QAAS,CACPmB,MAAO,CACLC,GAAI,6BAENC,MAAO,CACLC,KAAM,2BAERC,YAAa,CACXC,IAAK,CACHC,aAAa,IAGjBC,OAAQ,CACNC,SAAU,SAQdC,EAAAA,IAGF,OACE,gBAAKR,GAAG,aAAY,UAClB,SAAC,IAAK,CACJpB,QAASO,EAAMP,QACfa,OAAQN,EAAMM,OACdgB,KAAK,MACLC,OAAO,SAIf,ECWA,EAhDwB,WACtB,IAgCMf,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBV,EAAQW,EAAwBH,EAjCtB,CACdF,OAAQ,GACRb,QAAS,CACPmB,MAAO,CACLC,GAAI,kBACJS,KAAM,QAERE,QAAS,CACPC,KAAM,EACNC,MAAO,UAETC,OAAQ,CACNC,MAAO,GAETC,QAAS,CACPC,QAAQ,EACRC,WAAW,GAEbC,MAAO,CACLC,WAAY,GACZ1B,OAAQ,CACN2B,MAAM,IAGVf,OAAQ,CACNC,SAAU,OAEZN,MAAO,CACLC,KAAM,gBAK8CoB,EAAAA,IAE1D,OACE,gBAAKtB,GAAG,aAAY,UAClB,SAAC,IAAK,CACJpB,QAASO,EAAMP,QACfa,OAAQN,EAAMM,OACdgB,KAAK,OACLC,OAAO,SAIf,ECVA,EApC8B,WAC5B,IAYMf,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBV,EAAQW,EACZH,EAdc,CACdF,OAAQ,GACRb,QAAS,CACPc,OAAQ,GACRK,MAAO,CACLC,GAAI,yBAENC,MAAO,CACLC,KAAM,uBAQVqB,EAAAA,IAGF,OACE,gBAAKvB,GAAG,aAAY,SACZ,OAALb,QAAK,IAALA,GAAAA,EAAOM,QACN,SAAC,IAAK,CACJb,QAAc,OAALO,QAAK,IAALA,OAAK,EAALA,EAAOP,QAChBa,OAAa,OAALN,QAAK,IAALA,OAAK,EAALA,EAAOM,OACfgB,KAAK,MACLC,OAAO,QAGT,WAIR,ECFA,EAhCoB,WAClB,IAYMf,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBV,EAAQW,EACZH,EAdc,CACdF,OAAQ,GACRb,QAAS,CACPc,OAAQ,GACRK,MAAO,CACLC,GAAI,eAENC,MAAO,CACLC,KAAM,YAQVsB,EAAAA,IAGF,OACE,gBAAKxB,GAAG,aAAY,UAClB,SAAC,IAAK,CACJpB,QAASO,EAAMP,QACfa,OAAQN,EAAMM,OACdgB,KAAK,MACLC,OAAO,SAIf,E,UCLA,EAxB8B,WAC5B,IACQe,GADM1C,EAAAA,EAAAA,KACYG,QAAlBuC,QAER,OACE,SAACC,EAAA,EAAc,CAACC,OAAQ,CAACF,EAAQG,KAAMH,EAAQI,OAAQnB,OAAO,OAAM,UAClE,UAACoB,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE,WACzB,SAACF,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE,UACf,SAAC,EAAW,OAEd,SAACJ,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE,UACf,SAAC,EAAqB,OAExB,SAACJ,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAE,UACf,SAAC,EAAkB,OAErB,SAACJ,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG,UAChB,SAAC,EAAe,UAK1B,E,8BClBA,EARwB,SAAH,SAAMC,EAAM,EAANA,OAAM,OAC/B,SAACC,EAAA,EAAG,CAACC,MAAM,eAAc,SAAkB,QAAlB,EAAEF,EAAOG,iBAAS,aAAhB,EAAkBC,QAAa,E,gFCsC5D,EApCoB,SAAH,GAA+B,IAAzBC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IAAKN,EAAM,EAANA,OAC1BO,GAAWC,EAAAA,EAAAA,MACjB,GAA8B3D,EAAAA,EAAAA,WAAS,GAAM,eAAtC4D,EAAO,KAAEC,EAAU,MAE1BtD,EAAAA,EAAAA,YAAU,WAAO,IAAD,EAEd,OADAsD,EAA+D,UAArC,QAAf,EAAAL,EAAKM,kBAAU,aAAf,EAAiBC,iBAAiBC,gBACtC,WACLH,GACF,CACF,GAAG,CAACL,IAEJ,IAAMS,EAAY,yCAAG,WAAOC,GAAK,8EAKD,OALC,SAEvB1E,EAAW0E,EAAMC,OAAOP,QACxBQ,GAAQ,kBACTX,EAAIY,WAAQ,UACTlB,EAAOnC,GAAKxB,IAAQ,SAEtBkE,GAASY,EAAAA,EAAAA,IAAoB,CAAEF,SAAAA,EAAUjB,OAAAA,EAAQ3D,SAAAA,KAAa,KAAD,EACnEqE,EAAWrE,GAAU,gDAErB+E,QAAQC,MAAM,EAAD,IACbC,EAAAA,GAAAA,MAAY,EAAD,IAAQ,yDAEtB,gBAbiB,sCAelB,OAAO,SAACC,EAAA,EAAQ,CAACpF,SAAU2E,EAAcL,QAASA,GACpD,ECHA,EA3B4B,CAC1B,CACEe,YAAa,QACbpB,OAAQ,QACRqB,qBAAqB,EACrBC,eAAe,EACfC,oBAAoB,EACpBC,sBAAsB,EACtBC,sBAAsB,EACtBC,cAAe,KACfrD,KAAM,IAER,CACEsD,WAAY,SAACzB,GAAG,OAAK0B,QAAQ1B,EAAI2B,QAAQ,EACzCpE,GAAIqE,EAAAA,EAAAA,QACJ9B,OAAQ,cACR+B,KAAM,SAACC,GAAK,OAAK,SAAC,GAAW,UAAKA,GAAS,EAC3CV,eAAe,EACfD,qBAAqB,EACrBE,oBAAoB,EACpBC,sBAAsB,EACtBC,sBAAsB,EACtBC,cAAe,KACfrD,KAAM,MClBV,WAAgBH,GACd,IAAM+D,GAAa5E,EAAAA,EAAAA,IAAY6E,EAAAA,IACzBC,GAAgBC,EAAAA,EAAAA,IAAwBlE,GAAMhD,KAClD,gBAAcmH,EAAS,EAApBC,UAA2B,MAAe,CAC3ClB,YAAaiB,EACb5E,GAAI4E,EACJrC,OAHmC,EAAZuC,MAIvBb,cAAe,6BACfc,OAAQ,SAACR,GAAK,OAAK,SAAC,GAAe,UAAKA,GAAS,EACjDS,mCAAoC,YAAgC,IAAD,MAA5BxC,KAAQC,EAAG,EAAHA,IAAKN,EAAM,EAANA,OAC5C8C,EAAMxC,EAAIY,SAASrD,GACnBkF,EAASV,EAAWW,MAAK,SAACC,GAAM,OAAKA,EAAOpF,KAAOiF,CAAG,IACtDI,EAAYH,EAA0B,QAApB,EAAGA,EAAO/C,EAAOnC,WAAG,aAAjB,EAAmBqC,MAAQ,KACtD,MAAO,CACL5B,KAAM,SACN6E,WAAY,CACVC,WAAY,CACV1E,MAAO,CACLwB,MAAOgD,GAAa,UACpBG,WAAY,MACZC,YAAYC,EAAAA,EAAAA,IAAWL,EAAW,QAK5C,EACAM,sBAAuB,YAAgC,IAAD,QAA5BnD,KAAQC,EAAG,EAAHA,IAAKN,EAAM,EAANA,OAC/B8C,EAAMxC,EAAIY,SAASrD,GACnBkF,EAASV,EAAWW,MAAK,SAACC,GAAM,OAAKA,EAAOpF,KAAOiF,CAAG,IACtD5C,EAAQ6C,EAA0B,QAApB,EAAGA,EAAO/C,EAAOnC,WAAG,aAAjB,EAAmBqC,MAAQ,KAElD,QADa6C,IAA0B,QAApB,EAAGA,EAAO/C,EAAOnC,WAAG,aAAjB,EAAmBqB,MAOlC,CACLvD,GAAI,CACFuE,MAAAA,EACAmD,WAAY,MACZC,YAAYC,EAAAA,EAAAA,IAAWrD,EAAO,OATzB,CACLvE,GAAI,CACF0H,WAAY,OAUpB,EACD,IAGH,MAAM,GAAN,eACKI,EAAAA,EAAAA,MAAsB,EAAG,KAAE,OAC3BlB,IAAa,OACbmB,IAAmB,OACnBD,EAAAA,EAAAA,MAAsB,IAE5B,E,mBC/CD,GAXwBE,EAAAA,EAAAA,OAAK,WAAO,IAAD,IAC3BnG,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9B,OACE,SAACkG,EAAA,EAAU,CAACC,QAAQ,KAAK3D,MAAM,UAAS,SACrC1C,GAAaA,EAAUsG,OAAS,EAAC,UACf,QADe,EAC3BtG,EAAU,UAAE,aAAZ,EAAcM,MAAK,cAAkB,QAAlB,EAAMN,EAAU,UAAE,aAAZ,EAAcuG,SAAQ,WAClD,cAGV,ICZMC,GAASC,EAAAA,EAAAA,OAAK,kBAAM,oDAA6B,IACjDC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,6BAA8B,IACnDE,GAAaF,EAAAA,EAAAA,OAAK,kBAAM,4BAAiC,IAgB/D,EAdgB,SAAC7B,GAAK,OACpB,iBAAKpG,UAAU,kBAAiB,WAC9B,SAAC,EAAAoI,SAAQ,CAACC,UAAU,yBAAK,eAAiB,UACxC,SAACH,GAAO,UAAK9B,OAEf,SAAC,EAAAgC,SAAQ,CAACC,UAAU,yBAAK,eAAiB,UACxC,SAACL,GAAM,UAAK5B,OAEd,SAAC,EAAAgC,SAAQ,CAACC,UAAU,yBAAK,eAAiB,UACxC,SAACF,GAAU,UAAK/B,QAEd,ECFFkC,GAAcL,EAAAA,EAAAA,OAAK,kBAAM,6BAAgC,IACzDM,GAAgBN,EAAAA,EAAAA,OAAK,kBAAM,6DAA0B,IAErDO,IAAYb,EAAAA,EAAAA,OAAK,WACrB,OAAqBc,EAAAA,EAAAA,MAAb5G,EAAE,EAAFA,GAAIS,EAAI,EAAJA,KACNoG,GAAO,OAAOC,EAAerG,IAC7Bd,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBkH,GAASnH,EAAAA,EAAAA,IAAYoH,EAAAA,IACrBtE,GAAWC,EAAAA,EAAAA,MAaXsE,EAAI,yCAAG,WAAO1C,GAAK,4EACvB,IACQnB,GAAQ,kBACTmB,EAAM2C,MAAMC,OAAO5C,EAAM9B,IAAIzC,IAAIqD,UACjCkB,EAAM6C,QAEX1E,GAAS2E,EAAAA,EAAAA,IAAcjE,IACvBmB,EAAM+C,iBAIR,CAHE,MAAO9D,GACPD,QAAQC,MAAMA,GACdC,EAAAA,GAAAA,MAAYD,EACd,CAAC,2CACF,gBAZS,sCAcV,OACE,iCACE,SAAC,EAAA+C,SAAQ,CAACC,UAAU,8BAAE,eAAc,UAClC,SAACC,EAAW,OAEd,SAAC,IAAe,CAACc,SAAS,SAAC,EAAe,IAAI,UAC5C,SAAC,EAAAhB,SAAQ,CAACC,UAAU,8BAAE,eAAc,UAClC,SAACE,EAAa,CACZc,QAAoB,YAAXT,EAETU,SAAqB,WAAXV,EACVpH,UAAWA,EACXkH,QAASA,EACTa,QAAS,gBAAGR,EAAK,EAALA,MAAK,OAAO,SAACS,EAAU,CAACT,MAAOA,GAAS,EACpDD,KAAMA,EACNW,aAzCW,CACnBC,mBAAmB,EACnBC,QAAS,UACTC,kBAAkB,EAClBC,UAAU,EACVC,iBAAkB,CAChBxH,MAAM,EACNyH,MAAM,EACNhC,UAAU,KA2BClG,SAYjB,IAEA,MCzBA,GAlCmB,WACjB,OAAqB4G,EAAAA,EAAAA,MAAb5G,EAAE,EAAFA,GAAIS,EAAI,EAAJA,KACNiC,GAAWC,EAAAA,EAAAA,MACXoE,GAASnH,EAAAA,EAAAA,IAAYoH,EAAAA,IACrBxD,GAAQ5D,EAAAA,EAAAA,IAAYuI,EAAAA,IACpBtB,GAAO,OAAOC,EAAerG,IAQnC,OANAlB,EAAAA,EAAAA,YAAU,WACO,SAAXwH,GACFrE,GAAS0F,EAAAA,EAAAA,IAAa,CAAE3H,KAAAA,EAAMT,GAAAA,EAAI6G,QAAAA,IAEtC,GAAG,CAACE,EAAQrE,EAAU1C,EAAIS,IAEX,WAAXsG,EAA4BvD,GAG9B,SAAC,EAAS,CACRrG,WAAW,OACXC,UAAW,CACT,CACEM,MAAO,OACPO,SAAS,SAAC,GAAS,IACnBN,MAAM,SAAC0K,EAAA,EAAI,KAEb,CACE3K,MAAO,YACPO,SAAS,SAAC,EAAqB,IAC/BN,MAAM,SAAC2K,EAAA,EAAS,OAK1B,C","sources":["components/Card/customTab.jsx","hooks/useChartSeriesAndLabels.js","components/Graphs/Objects/AttributesBarChart.jsx","components/Graphs/Objects/AttributesChart.jsx","components/Graphs/Objects/MassDistributionChart.jsx","components/Graphs/Objects/StatesChart.jsx","components/Graphs/Container/ObjectGraphsContainer.jsx","components/Table/Header/CustomAttribute.jsx","components/Table/Cell/EndItemCell.jsx","components/Table/Columns/UsageEndItemColumns.js","components/Table/Columns/useMassColumns.js","components/Table/Header/MassTableHeader.jsx","components/Table/Toolbars/TopToolbar.jsx","components/Table/Container/MassTable.jsx","pages/ObjectPage.jsx"],"sourcesContent":["import TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { Tab } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst CustomTab = ({ defaultTab, tabsArray }) => {\r\n  const [value, setValue] = React.useState(defaultTab);\r\n\r\n  const tabs = tabsArray.map(({ label, icon }) => (\r\n    <Tab\r\n      value={label}\r\n      label={label}\r\n      key={label}\r\n      icon={icon}\r\n      iconPosition=\"start\"\r\n      sx={{ mb: -2 }}\r\n    />\r\n  ));\r\n\r\n  const tabElements = tabsArray.map(({ label, element }) => (\r\n    <TabPanel value={label} className=\"full-width-height\" key={label}>\r\n      {element}\r\n    </TabPanel>\r\n  ));\r\n\r\n  return (\r\n    <TabContext value={value}>\r\n      <TabList\r\n        value={value}\r\n        onChange={(e, newValue) => setValue(newValue)}\r\n        aria-label=\"secondary tabs example\"\r\n        sx={{ pl: '24px', pr: '24px' }}\r\n      >\r\n        {tabs}\r\n      </TabList>\r\n      {tabElements}\r\n    </TabContext>\r\n  );\r\n};\r\n\r\nCustomTab.propTypes = {\r\n  defaultTab: PropTypes.string.isRequired,\r\n  tabsArray: PropTypes.array.isRequired,\r\n};\r\nexport default CustomTab;\r\n","import { useTheme } from '@mui/material/styles';\r\nimport { useEffect, useState } from 'react';\r\nimport { TYPES } from '../utils/ServiceUtils';\r\n\r\nexport default (data, options, fn) => {\r\n  const theme = useTheme();\r\n  const [state, setState] = useState({\r\n    ...options,\r\n    theme: {\r\n      mode: theme.palette.mode,\r\n      palette: 'palette7',\r\n    },\r\n  });\r\n  const executeFunction = fn.bind(this);\r\n\r\n  useEffect(() => {\r\n    const [series, labels] = executeFunction(data, TYPES[0] || 'VPMReference');\r\n    setState({\r\n      ...state,\r\n      series,\r\n      options: {\r\n        theme: {\r\n          mode: theme.palette.mode,\r\n          palette: 'palette7',\r\n        },\r\n        labels,\r\n      },\r\n    });\r\n  }, [data, theme]);\r\n\r\n  return state;\r\n};\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTableData } from '../../../features/table/structureTableSlice';\r\nimport useChartSeriesAndLabels from '../../../hooks/useChartSeriesAndLabels';\r\nimport { getAttributesBarSeries } from '../../../utils/ChartUtils';\r\n\r\nconst AttributesBarChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        id: 'rootObjectAttributesChart',\r\n      },\r\n      title: {\r\n        text: 'Attributes Distribution',\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          distributed: true,\r\n        },\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n  const tableData = useSelector(getTableData);\r\n  const state = useChartSeriesAndLabels(\r\n    tableData,\r\n    options,\r\n    getAttributesBarSeries\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"bar\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttributesBarChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTableData } from '../../../features/table/structureTableSlice';\r\nimport useChartSeriesAndLabels from '../../../hooks/useChartSeriesAndLabels';\r\nimport { getAttributeSeries } from '../../../utils/ChartUtils';\r\n\r\nconst AttributesChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        id: 'attributesChart',\r\n        type: 'line',\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        style: 'hollow',\r\n      },\r\n      stroke: {\r\n        width: 1,\r\n      },\r\n      tooltip: {\r\n        shared: true,\r\n        intersect: false,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n        labels: {\r\n          show: false,\r\n        },\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        text: 'Attributes',\r\n      },\r\n    },\r\n  };\r\n  const tableData = useSelector(getTableData);\r\n  const state = useChartSeriesAndLabels(tableData, options, getAttributeSeries);\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"line\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttributesChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTableData } from '../../../features/table/structureTableSlice';\r\nimport useChartSeriesAndLabels from '../../../hooks/useChartSeriesAndLabels';\r\nimport { getMassSeriesAndLabels } from '../../../utils/ChartUtils';\r\n\r\nconst MassDistributionChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      labels: [],\r\n      chart: {\r\n        id: 'massDistributionChart',\r\n      },\r\n      title: {\r\n        text: 'Mass Distribution',\r\n      },\r\n    },\r\n  };\r\n  const tableData = useSelector(getTableData);\r\n  const state = useChartSeriesAndLabels(\r\n    tableData,\r\n    options,\r\n    getMassSeriesAndLabels\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      {state?.series ? (\r\n        <Chart\r\n          options={state?.options}\r\n          series={state?.series}\r\n          type=\"pie\"\r\n          height=\"300\"\r\n        />\r\n      ) : (\r\n        'NO DATA'\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MassDistributionChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTableData } from '../../../features/table/structureTableSlice';\r\nimport useChartSeriesAndLabels from '../../../hooks/useChartSeriesAndLabels';\r\nimport { getStateSeriesAndLabels } from '../../../utils/ChartUtils';\r\n\r\nconst StatesChart = () => {\r\n  const options = {\r\n    series: [],\r\n    options: {\r\n      labels: [],\r\n      chart: {\r\n        id: 'statesChart',\r\n      },\r\n      title: {\r\n        text: 'STATES',\r\n      },\r\n    },\r\n  };\r\n  const tableData = useSelector(getTableData);\r\n  const state = useChartSeriesAndLabels(\r\n    tableData,\r\n    options,\r\n    getStateSeriesAndLabels\r\n  );\r\n\r\n  return (\r\n    <div id=\"apex-chart\">\r\n      <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"pie\"\r\n        height=\"300\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatesChart;\r\n","import { Grid, useTheme } from '@mui/material';\r\nimport React from 'react';\r\nimport AttributesBarChart from '../Objects/AttributesBarChart';\r\nimport AttributesChart from '../Objects/AttributesChart';\r\nimport MassDistributionChart from '../Objects/MassDistributionChart';\r\nimport StatesChart from '../Objects/StatesChart';\r\nimport GraphContainer from './GraphContainer';\r\n\r\nconst ObjectGraphsContainer = () => {\r\n  const theme = useTheme();\r\n  const { primary } = theme.palette;\r\n\r\n  return (\r\n    <GraphContainer colors={[primary.main, primary.light]} height=\"90vh\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={3}>\r\n          <StatesChart />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <MassDistributionChart />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <AttributesBarChart />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AttributesChart />\r\n        </Grid>\r\n      </Grid>\r\n    </GraphContainer>\r\n  );\r\n};\r\n\r\nexport default ObjectGraphsContainer;\r\n","import { Box } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst CustomAttribute = ({ column }) => (\r\n  <Box color=\"primary.main\">{column.columnDef?.header}</Box>\r\n);\r\n\r\nCustomAttribute.propTypes = {\r\n  column: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CustomAttribute;\r\n","import { Checkbox } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { handleEndItemChange } from '../../../features/table/Actions';\r\nimport toast from '../../../helper/toast';\r\n\r\nconst EndItemCell = ({ cell, row, column }) => {\r\n  const dispatch = useDispatch();\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setChecked(cell.getValue()?.toLocaleString().toLowerCase() === 'true');\r\n    return () => {\r\n      setChecked();\r\n    };\r\n  }, [cell]);\r\n\r\n  const handleChange = async (event) => {\r\n    try {\r\n      const newValue = event.target.checked;\r\n      const dataItem = {\r\n        ...row.original,\r\n        ...{ [column.id]: newValue },\r\n      };\r\n      await dispatch(handleEndItemChange({ dataItem, column, newValue }));\r\n      setChecked(newValue);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  return <Checkbox onChange={handleChange} checked={checked} />;\r\n};\r\n\r\nEndItemCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  row: PropTypes.object.isRequired,\r\n  column: PropTypes.object.isRequired,\r\n  // table: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EndItemCell;\r\n","import React from 'react';\r\nimport Constants from '../../../helper/Constants';\r\nimport EndItemCell from '../Cell/EndItemCell';\r\n\r\nconst UsageEndItemColumns = [\r\n  {\r\n    accessorKey: 'usage',\r\n    header: 'Usage',\r\n    enableColumnActions: false,\r\n    enableEditing: false,\r\n    enableColumnFilter: false,\r\n    enableColumnOrdering: false,\r\n    enableColumnDragging: false,\r\n    attributeType: 'db',\r\n    size: 80,\r\n  },\r\n  {\r\n    accessorFn: (row) => Boolean(row.endItem),\r\n    id: Constants.ENDITEM,\r\n    header: 'Is End Item',\r\n    Cell: (props) => <EndItemCell {...props} />,\r\n    enableEditing: false,\r\n    enableColumnActions: false,\r\n    enableColumnFilter: false,\r\n    enableColumnOrdering: false,\r\n    enableColumnDragging: false,\r\n    attributeType: 'db',\r\n    size: 100,\r\n  },\r\n];\r\n\r\nexport default UsageEndItemColumns;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCacheCellColors } from '../../../features/cache/cacheSlice';\r\nimport { shadeColor } from '../../../utils/CommonUtils';\r\nimport { getMassAttributeDetails } from '../../../utils/ServiceUtils';\r\nimport CustomAttribute from '../Header/CustomAttribute';\r\nimport { DEFAULT_COLUMNS } from './DefaultColumns';\r\nimport UsageEndItemColumns from './UsageEndItemColumns';\r\n\r\nexport default (type) => {\r\n  const cellColors = useSelector(getCacheCellColors);\r\n  const customColumns = getMassAttributeDetails(type).map(\r\n    ({ Attribute: attribute, Label: label }) => ({\r\n      accessorKey: attribute,\r\n      id: attribute, // id is still required when using accessorFn instead of accessorKey\r\n      header: label,\r\n      attributeType: 'dseno:EnterpriseAttributes',\r\n      Header: (props) => <CustomAttribute {...props} />,\r\n      muiTableBodyCellEditTextFieldProps: ({ cell: { row, column } }) => {\r\n        const oid = row.original.id;\r\n        const rowObj = cellColors.find((cColor) => cColor.id === oid);\r\n        const editColor = rowObj ? rowObj[column.id]?.color : null;\r\n        return {\r\n          type: 'number',\r\n          InputProps: {\r\n            inputProps: {\r\n              style: {\r\n                color: editColor || 'inherit',\r\n                fontWeight: '600',\r\n                background: shadeColor(editColor, 100),\r\n              },\r\n            },\r\n          },\r\n        };\r\n      },\r\n      muiTableBodyCellProps: ({ cell: { row, column } }) => {\r\n        const oid = row.original.id;\r\n        const rowObj = cellColors.find((cColor) => cColor.id === oid);\r\n        const color = rowObj ? rowObj[column.id]?.color : null;\r\n        const show = rowObj ? rowObj[column.id]?.show : false;\r\n        if (!show)\r\n          return {\r\n            sx: {\r\n              fontWeight: '600',\r\n            },\r\n          };\r\n        return {\r\n          sx: {\r\n            color,\r\n            fontWeight: '600',\r\n            background: shadeColor(color, 100),\r\n          },\r\n        };\r\n      },\r\n    })\r\n  );\r\n\r\n  return [\r\n    ...DEFAULT_COLUMNS.slice(0, 1),\r\n    ...customColumns,\r\n    ...UsageEndItemColumns,\r\n    ...DEFAULT_COLUMNS.slice(1),\r\n  ];\r\n};\r\n","import { Typography } from '@mui/material';\r\nimport React, { memo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTableData } from '../../../features/table/structureTableSlice';\r\n\r\nconst MassTableHeader = memo(() => {\r\n  const tableData = useSelector(getTableData);\r\n  return (\r\n    <Typography variant=\"h6\" color=\"primary\">\r\n      {tableData && tableData.length > 0\r\n        ? `${tableData[0]?.title} - ${tableData[0]?.revision} (MASS)`\r\n        : 'MASS TABLE'}\r\n    </Typography>\r\n  );\r\n});\r\n\r\nexport default MassTableHeader;\r\n","import React, { lazy, Suspense } from 'react';\r\n\r\nconst Export = lazy(() => import('../../Button/Export'));\r\nconst Refresh = lazy(() => import('../../Button/Refresh'));\r\nconst RollupMenu = lazy(() => import('../../Rollup/RollupMenu'));\r\n\r\nconst Toolbar = (props) => (\r\n  <div className=\"flex-column-box\">\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Refresh {...props} />\r\n    </Suspense>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Export {...props} />\r\n    </Suspense>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <RollupMenu {...props} />\r\n    </Suspense>\r\n  </div>\r\n);\r\n\r\nexport default Toolbar;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { lazy, memo, Suspense } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { handleRowEdit } from '../../../features/table/Actions';\r\nimport {\r\n  getObjectsStatus,\r\n  getTableData,\r\n} from '../../../features/table/structureTableSlice';\r\nimport toast from '../../../helper/toast';\r\nimport ExpandablePanel from '../../Card/expandablePanel';\r\nimport useMassColumns from '../Columns/useMassColumns';\r\nimport MassTableHeader from '../Header/MassTableHeader';\r\nimport TopToolbar from '../Toolbars/TopToolbar';\r\n\r\nconst MassDetails = lazy(() => import('../../Form/MassDetails'));\r\nconst MaterialTable = lazy(() => import('../MaterialTable'));\r\n\r\nconst MassTable = memo(() => {\r\n  const { id, type } = useParams();\r\n  const columns = [...useMassColumns(type)];\r\n  const tableData = useSelector(getTableData);\r\n  const status = useSelector(getObjectsStatus);\r\n  const dispatch = useDispatch();\r\n  const initialState = {\r\n    showColumnFilters: false,\r\n    density: 'compact',\r\n    showGlobalFilter: false,\r\n    expanded: true,\r\n    columnVisibility: {\r\n      type: false,\r\n      name: false,\r\n      revision: false,\r\n    },\r\n  };\r\n\r\n  const save = async (props) => {\r\n    try {\r\n      const dataItem = {\r\n        ...props.table.getRow(props.row.id).original,\r\n        ...props.values,\r\n      };\r\n      dispatch(handleRowEdit(dataItem));\r\n      props.exitEditingMode();\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<>LOADING...</>}>\r\n        <MassDetails />\r\n      </Suspense>\r\n      <ExpandablePanel summary={<MassTableHeader />}>\r\n        <Suspense fallback={<>LOADING...</>}>\r\n          <MaterialTable\r\n            loading={status === 'loading'}\r\n            key={id}\r\n            isSaving={status === 'saving'}\r\n            tableData={tableData}\r\n            columns={columns}\r\n            toolbar={({ table }) => <TopToolbar table={table} />}\r\n            save={save}\r\n            initialState={initialState}\r\n          />\r\n        </Suspense>\r\n      </ExpandablePanel>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default MassTable;\r\n","import { Dashboard, Info } from '@mui/icons-material';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport CustomTab from '../components/Card/customTab';\r\nimport ObjectGraphsContainer from '../components/Graphs/Container/ObjectGraphsContainer';\r\nimport useMassColumns from '../components/Table/Columns/useMassColumns';\r\nimport MassTable from '../components/Table/Container/MassTable';\r\nimport { fetchObjects } from '../features/table/Actions';\r\nimport {\r\n  getObjectsError,\r\n  getObjectsStatus,\r\n} from '../features/table/structureTableSlice';\r\n\r\nconst ObjectPage = () => {\r\n  const { id, type } = useParams();\r\n  const dispatch = useDispatch();\r\n  const status = useSelector(getObjectsStatus);\r\n  const error = useSelector(getObjectsError);\r\n  const columns = [...useMassColumns(type)];\r\n\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(fetchObjects({ type, id, columns }));\r\n    }\r\n  }, [status, dispatch, id, type]);\r\n\r\n  if (status === 'failed') return error;\r\n\r\n  return (\r\n    <CustomTab\r\n      defaultTab=\"MASS\"\r\n      tabsArray={[\r\n        {\r\n          label: 'MASS',\r\n          element: <MassTable />,\r\n          icon: <Info />,\r\n        },\r\n        {\r\n          label: 'Dashboard',\r\n          element: <ObjectGraphsContainer />,\r\n          icon: <Dashboard />,\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ObjectPage;\r\n"],"names":["defaultTab","tabsArray","React","value","setValue","tabs","map","label","icon","Tab","iconPosition","sx","mb","tabElements","element","TabPanel","className","TabContext","TabList","onChange","e","newValue","pl","pr","data","options","fn","theme","useTheme","useState","mode","palette","state","setState","executeFunction","bind","useEffect","TYPES","series","labels","tableData","useSelector","getTableData","useChartSeriesAndLabels","chart","id","title","text","plotOptions","bar","distributed","legend","position","getAttributesBarSeries","type","height","markers","size","style","stroke","width","tooltip","shared","intersect","xaxis","categories","show","getAttributeSeries","getMassSeriesAndLabels","getStateSeriesAndLabels","primary","GraphContainer","colors","main","light","Grid","container","spacing","item","xs","column","Box","color","columnDef","header","cell","row","dispatch","useDispatch","checked","setChecked","getValue","toLocaleString","toLowerCase","handleChange","event","target","dataItem","original","handleEndItemChange","console","error","toast","Checkbox","accessorKey","enableColumnActions","enableEditing","enableColumnFilter","enableColumnOrdering","enableColumnDragging","attributeType","accessorFn","Boolean","endItem","Constants","Cell","props","cellColors","getCacheCellColors","customColumns","getMassAttributeDetails","attribute","Attribute","Label","Header","muiTableBodyCellEditTextFieldProps","oid","rowObj","find","cColor","editColor","InputProps","inputProps","fontWeight","background","shadeColor","muiTableBodyCellProps","DEFAULT_COLUMNS","UsageEndItemColumns","memo","Typography","variant","length","revision","Export","lazy","Refresh","RollupMenu","Suspense","fallback","MassDetails","MaterialTable","MassTable","useParams","columns","useMassColumns","status","getObjectsStatus","save","table","getRow","values","handleRowEdit","exitEditingMode","summary","loading","isSaving","toolbar","TopToolbar","initialState","showColumnFilters","density","showGlobalFilter","expanded","columnVisibility","name","getObjectsError","fetchObjects","Info","Dashboard"],"sourceRoot":""}