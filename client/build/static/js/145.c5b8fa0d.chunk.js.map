{"version":3,"file":"static/js/145.c5b8fa0d.chunk.js","mappings":"4NAeMA,GAAgBC,EAAAA,EAAAA,OAAK,kBAAM,+EAA2C,IAoD5E,UAlDkB,WAChB,IAAQC,GAASC,EAAAA,EAAAA,MAATD,KACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACrBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAAaN,EAAAA,EAAAA,IAAYO,EAAAA,IACzBC,EAAUC,EAAAA,EAQhB,OANAC,EAAAA,EAAAA,YAAU,WACO,SAAXR,GACFL,GAASc,EAAAA,EAAAA,GAAa,CAAEhB,KAAAA,EAAMa,QAAAA,IAElC,GAAG,CAACN,EAAQL,IAEPe,EAAAA,GAAAA,SAAejB,GACL,WAAXO,EAA4BE,GAG9B,SAAC,EAAAS,SAAQ,CAACC,UAAU,8BAAE,eAAc,UAClC,SAACrB,EAAa,CACZsB,QAAoB,YAAXb,EACTc,UAAWjB,EACXS,QAASA,EACTS,iBAAiB,EACjBC,eAAe,EACfC,wBAAyB,CAAC,EAC1BC,kBAAkB,EAClBC,MAAO,CACLC,UAAsB,YAAXpB,EACXqB,kBAAkB,EAClBjB,WAAY,CACVkB,UAAWlB,EAAWkB,UACtBC,SAAUnB,EAAWmB,WAGzBC,mBAAoB,SAACC,GACnB,IAAMC,EAAgBD,GAAQ,UACzBrB,IAELT,GAASgC,EAAAA,EAAAA,IAAcD,IACvB/B,GAASc,EAAAA,EAAAA,GAAa,CAAEhB,KAAAA,EAAMa,QAAAA,IAChC,EACAsB,kBAAgB,EAChBC,UAAWzB,EAAWkB,UAAY,GAAKlB,EAAWmB,aA7BtBO,EAAAA,EAAAA,2BAiCpC,C","sources":["pages/TypesPage.jsx"],"sourcesContent":["import React, { lazy, Suspense, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { DEFAULT_COLUMNS } from '../components/Table/Columns/DefaultColumns';\r\nimport { fetchObjects } from '../features/types/Actions';\r\nimport {\r\n  getPagination,\r\n  getTypesError,\r\n  getTypesStatus,\r\n  selectTypeObjects,\r\n  setPagination,\r\n} from '../features/types/typesSlice';\r\nimport Constants from '../helper/Constants';\r\nimport { TYPES } from '../utils/ServiceUtils';\r\n\r\nconst MaterialTable = lazy(() => import('../components/Table/MaterialTable'));\r\n\r\nconst TypesPage = () => {\r\n  const { type } = useParams();\r\n  const dispatch = useDispatch();\r\n  const objects = useSelector(selectTypeObjects);\r\n  const status = useSelector(getTypesStatus);\r\n  const error = useSelector(getTypesError);\r\n  const pagination = useSelector(getPagination);\r\n  const columns = DEFAULT_COLUMNS;\r\n\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(fetchObjects({ type, columns }));\r\n    }\r\n  }, [status, dispatch]);\r\n\r\n  if (!TYPES.includes(type)) return Constants.TYPE_NOT_CONFIGURED_WARNING;\r\n  if (status === 'failed') return error;\r\n\r\n  return (\r\n    <Suspense fallback={<>LOADING...</>}>\r\n      <MaterialTable\r\n        loading={status === 'loading'}\r\n        tableData={objects}\r\n        columns={columns}\r\n        enableExpanding={false}\r\n        enableEditing={false}\r\n        displayColumnDefOptions={{}}\r\n        enableRowActions={false}\r\n        state={{\r\n          isLoading: status === 'loading',\r\n          showProgressBars: false,\r\n          pagination: {\r\n            pageIndex: pagination.pageIndex,\r\n            pageSize: pagination.pageSize,\r\n          },\r\n        }}\r\n        onPaginationChange={(newPage) => {\r\n          const newPagination = newPage({\r\n            ...pagination,\r\n          });\r\n          dispatch(setPagination(newPagination));\r\n          dispatch(fetchObjects({ type, columns }));\r\n        }}\r\n        manualPagination\r\n        rowCount={(pagination.pageIndex + 2) * pagination.pageSize}\r\n      />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default TypesPage;\r\n"],"names":["MaterialTable","lazy","type","useParams","dispatch","useDispatch","objects","useSelector","selectTypeObjects","status","getTypesStatus","error","getTypesError","pagination","getPagination","columns","DEFAULT_COLUMNS","useEffect","fetchObjects","TYPES","Suspense","fallback","loading","tableData","enableExpanding","enableEditing","displayColumnDefOptions","enableRowActions","state","isLoading","showProgressBars","pageIndex","pageSize","onPaginationChange","newPage","newPagination","setPagination","manualPagination","rowCount","Constants"],"sourceRoot":""}